interview_experiences,metadata.url,metadata.scraped_at,metadata.source,basic_info.title,basic_info.difficulty,basic_info.accuracy,basic_info.submissions,basic_info.avg_time,content.problem,complexity.time_complexity,complexity.space_complexity,tags.company_tags,tags.topic_tags
[],https://www.geeksforgeeks.org/problems/buy-stock-2/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:36:28.721613,GeeksforGeeks,Stock Buy and Sell – Max one Transaction Allowed,Easy,49.33%,92K+,10m,"Given an array prices[] of length n, representing the prices of the stocks on different days. The task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. Here one transaction means 1 buy + 1 Sell. If it is not possible to make a profit then return 0.
Note: Stock must be bought before being sold.
Examples:
Input: prices[] = [7, 10, 1, 3, 6, 9, 2]
Output: 8
Explanation: You can buy the stock on day 2 at price = 1 and sell it on day 5 at price = 9. Hence, the profit is 8.
Input: prices[] = [7, 6, 4, 3, 1]
Output: 0
Explanation: Here the prices are in decreasing order, hence if we buy any day then we cannot sell it at a greater price. Hence, the answer is 0.
Input: prices[] = [1, 3, 6, 9, 11]
Output: 10
Explanation: Since the array is sorted in increasing order, we can make maximum profit by buying at price[0] and selling at price[n-1].
Constraint:
1 <= prices.size()<= 105
0 <= prices[i] <=104",O(n),O(1),"['Bloomberg', 'Facebook', 'Intel', 'Infosys', 'Zoho', 'Morgan Stanley', 'Amazon', 'Microsoft', 'Samsung', 'Yahoo', 'PayPal', 'Nvidia', 'Oracle', 'Visa', 'Walmart', 'Goldman Sachs', 'TCS', 'Adobe', 'Google', 'IBM', 'Accenture', 'Apple', 'Uber']","['Greedy', 'Arrays']"
"[{'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}]",https://www.geeksforgeeks.org/problems/flattening-a-linked-list--170645/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:36:39.792995,GeeksforGeeks,Flattening a Linked List,Medium,50.24%,22K+,Not available,"Given a Linked List of size N, where every node represents a sub-linked-list and contains two pointers:
(i) a next pointer to the next node,
(ii) a bottom pointer to a linked list where this node is head.
Each of the sub-linked-list is in sorted order.
Flatten the Link List such that all the nodes appear in a single level while maintaining the sorted order.
Note: The flattened list will be printed using the bottom pointer instead of next pointer.
Example 1:
Input:
5 -> 10 -> 19 -> 28
| | | |
7 20 22 35
| | |
8 50 40
| |
30 45
Output:  5-> 7-> 8- > 10 -> 19-> 20->
22-> 28-> 30-> 35-> 40-> 45-> 50.
Explanation:
The resultant linked lists has every
node in a single level.
(Note: | represents the bottom pointer.)
Example 2:
Input:
5 -> 10 -> 19 -> 28
| |
7 22
| |
8 50
|
30
Output: 5->7->8->10->19->22->28->30->50
Explanation:
The resultant linked lists has every
node in a single level.
(Note: | represents the bottom pointer.)
Your Task:
You do not need to read input or print anything. Complete the function flatten() that takes the head of the linked list as input parameter and returns the head of flattened link list.
Expected Time Complexity: O(N*M)
Expected Auxiliary Space: O(1)
Constraints:
0 <= N <= 50
1 <= Mi <= 20
1 <= Element of linked list <= 103",Not specified,Not specified,"['Paytm', 'Flipkart', 'Amazon', 'Microsoft', 'Snapdeal', '24*7 Innovation Labs', 'Payu', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Drishti-Soft']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/remove-duplicate-element-from-sorted-linked-list/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:36:53.505574,GeeksforGeeks,Remove Duplicates from a Sorted Linked List,Easy,49.37%,313K+,20m,"Given a singly linked list. The task is to remove duplicates (nodes with duplicate values) from the given list (if it exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.
Examples:
Input:
LinkedList: 2->2->4->5
Output: 2 -> 4 -> 5
Explanation: In the given linked list 2 -> 2 -> 4 -> 5, only 2 occurs more than 1 time. So we need to remove it once.
Input:
LinkedList: 2->2->2->2->2
Output: 2
Explanation: In the given linked list 2 -> 2 -> 2 -> 2, 2 is the only element and is repeated 5 times. So we need to remove any four 2.
Expected Time Complexity : O(n)
Expected Space Complexity: O(1)
Constraints:
1 <= Number of nodes, data of nodes <= 105",Not specified,Not specified,"['Microsoft', 'OYO Rooms', 'Oracle', 'Visa', 'Adobe', 'Myntra']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/delete-without-head-pointer/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:37:04.700342,GeeksforGeeks,Delete without head pointer,Easy,78.57%,214K+,Not available,"You are given a node del_node of a Singly Linked List where you have to delete a value of the given node from the linked list but you are not given the head of the list.
By deleting the node value, we do not mean removing it from memory. We mean:
The value of the given node should not exist in the linked list.
The number of nodes in the linked list should decrease by one.
All the values before & after the del_node node should be in the same order.
Note:
Multiple nodes can have the same values as the del_node, but you must only remove the node whose pointer del_node is given to you.
It is guaranteed that there exists a node with a value equal to the del_node value and it will not be the last node of the linked list.
Examples:
Input: Linked List = 1 -> 2, del_node = 1
Output: 2
Explanation: After deleting 1 from the linked list, we have remaining nodes as 2.
Input: Linked List = 10 -> 20 -> 4 -> 30, del_node = 20
Output: 10->4->30
Explanation: After deleting 20 from the linked list, we have remaining nodes as 10, 4, 30.
Constraints:
2 <= number of nodes <= 106
1 <= node->data <= 106",O(1),O(1),"['Amazon', 'Microsoft', 'Samsung', 'Visa', 'Goldman Sachs', 'Kritikal Solutions']","['Linked List', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 10 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-10-on-campus/', 'content_summary': ""Accolite Software visited our campus. Firstly, they presented a pre-placement-talk where they talked about their work culture, their biggest clients, their intra, fests, etc. The work life aspect was discussed too. \n\nFollowing this, they conducted Online test for 30 min that included MCQ questions from \nC, C++ : finding o/p, complexity, bugs if any \nDBMS: Join queries, indexing and theory \nOS and Networks: Basic theory Networking \nand Little Quantitative Aptitude. \nAround 200 Students appeared for this round. 11 were shortlisted for first round interviews. I got through this round. For the next top 10, a coding round of pen/paper (1 hour) was carried out from where only 2 were shortlisted. There were three questions as narrated by my friends. One on tries, one on heap, one on sorting. Thus, 13 people made it for technical interviews. \n\nRound 1 FFS : 1 hour \nThe two interviewers congratulated me for reaching this far. \n\n1) After a little introduction, they threw me a puzzle. 3 _ 1 _ 3 _ 6 = 8. I had to fill the spaces with any operator I can, to satisfy the equality. I thought for about 5 mins. Then I gave the following: (3 ^ 1) & 3 + 6. They were happy with the not so conventional approach but directed me towards a simpler construction. See if you can find it yourself \n\n2) Then followed a barrage of sql queries, probably as I had mentioned databases in my resume. I suggest everyone to practice join queries. \n\n3) Next question was to detect the merging point of two linked lists with length m and n. I initially gave the hashmap solution which he asked me to code. Then he asked for other less expensive ways. I reduced problem into finding the start node of a loop, if modification was allowed, otherwise, advancing the longer by the difference between the two lengths. Full working code was required along with the time and space complexities. \n\n4) Another question was to find a triplet in the array that sums to a particular value. \nAfter this, I was notified to get ready for round 2. Five folks were eliminated. \n\nRound 2 FFS: 2 hours \n1) Given a huge array consisting of integers in a certain range. How would you solve the queries of the following type : Report the number of integers lying in the range between l to r. I built a prefix array as in the counting sort. Now all queries could be answered in O(1). He modified the question by stating that the range now was always a multiple of some number. I proceeded by dividing the i/p into buckets and then building the prefix array. Full code was asked. \n\n2) Given a huge numbers of strings in an arraylist, report the longest common prefix of the strings. I solved this by creating a trie with an augmented node storing depth and count at each node. Only the important modules were asked to be coded. \n\n3) Short discussion of my summer internship, why I used JAVA, what challenges did I face. He asked me to explain the differences between treeMap, linkedHashMap and hashMap. \n\n4) I had mentioned a project carried out on Linux Mint. He asked me the basic commands of linux, namely cat, grep, ps, df along with syntax for git commands. \n\n5) Assume a traveller wants to books a cab. Write an automated server that schedules a cab present in the region pool of the user in a way that maximizes the benefit to the company. You can make assumptions like GPS availability. At first, I had no clue where I was heading. Then I broke down the problem into structures and assumed the necessary. This was more of a discussion sort of thing, as this had no definitive answer. I had to write the pseudocode of anything I thought. 30 mins went straight into this question. \n\n6) Core JAVA Questions. 7-8 of them including but not limited to new operator, constructor, static blocks, synchronized keywords etc. \n3 were eliminated. I got through to round 3. \n\nRound 3: FFS 1:15 hours \nThe interviewer greeted and informed me of this round being a techno-managerial round. \n1) You are the manager of a restaurant. Given the archives of past purchases of raw materials per day of the week, write an algorithm that forecasts the amount of each raw material to be purchased so as to cover the next week requirements. Mention data structures used, if any. After thinking for a while, I proceeded by the method of weighted averages, assigned more weight to weekends over weekdays, special diets etc. I said, I being the manager would use the trend adjustment factor to forecast the next demand (economics helped Explained this using an example. \n\n2) Given an i/p stream of train coaches in the following format: XY where X: uppercase letter, Y: a number, what is the most efficient way to sort the coaches such that at the end of the stream, we can get the sorted order in O(1). eg. A3, B2, C10, A1 -> o/p A1, A3, B2, C10. \nAlso prove why comparison sorts have a lower bound of O(nlogn) where n is the size of the input. \n\n3) How do you delete an arbitrary item from a heap. Write the code. Even the redundant lines in my code were subjected to scrutiny. \nI wasn't confident of my performance in this round, but stayed positive. It had been 10 hours of waiting. \n\nHR Round(15 mins) \nThe HR Ma'am was very friendly. Asked me what I knew about the company so far. I had a feeling I was being tested for my listening skills against the morning pre-placement presentation. \n\nI would like to thanks geeksforgeeks for their content that helped me through. A word of advice: Practice pen and paper codes. Never lie on your resume, it may back-fire at any moment. Inner peace is a must Cheers! \n\n \n\n\nRelated Practice ProblemsIntersection Point in Y Shapped Linked ListsTriplet Sum in Array\n\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 10 (On-Campus)""}, {'title': 'Qualcomm Interview Experience Set 9 Experienced Linkedin Invite', 'url': 'https://www.geeksforgeeks.org/qualcomm-interview-experience-set-9-experienced-linkedin-invite/', 'content_summary': 'I have applied for Graphics Software Engineer position through LinkedIn. I was called for interview after 2 weeks of applying. Interview took place in Bangalore office. Round 1 (60 minute): 1. Explain BE project (Satellite image processing) 2. BFS and DFS (Example and code) 3. How to find loops in linked list? 4. Merge sort ad Quick sort (Code and timing complexity) 5. How pivot element in quick sort affects the timing complexity? 6. Binary search 7. Virtual function 8. Overloading vs Overriding 9. Find the intersection of two linked list (2 methods: brute force and nlogn complexity one) Round 2 (30 min): 1. Questions on internship experience (Computer Vision domain) 2. Multidimensional images 3. Masking operation 4. Edge detection 5. Face detection 6. General steps in image processing 7. Image segmentation techniques 8. How simulation model of any HW is designed? 9. How you compare outputs of HW model and equivalent SW model? Round 3 (30 min): 1. malloc vs calloc 2. Write a python script to find an occurrence of a word in file 3. What are timing complexity notations? 4. Create and insert function in Binary search tree (BST) 5. Access specifiers with example 6. 1 year job experience (SAP BI). Steps in SAP BI? 7. Puzzle: With minimum number of moves change given shape ito another shape (matchstick) 6. Puzzle: One man does the exact double amount of work than the previous day. It completed the total work in 15 days then how many days it require to completed 50% of work?\nAll Practice Problems for Qualcomm !\n\nComment\nMore info\nCampus Training Program\nNext Article\nQualcomm Interview Experience | Set 9 (Experienced through Linkedin Invite)'}, {'title': 'Makemytrip Interview Experience Set 4', 'url': 'https://www.geeksforgeeks.org/makemytrip-interview-experience-set-4/', 'content_summary': 'Round 1 : Written : Q1. Given a stream of around billion numbers in an array, which has approximately only 1000 unique numbers. Print the unique numbers. Complexity should be less than O(n). Eg: Input: 1,1,1,1,….2,2,2,…3,4,4,4,4……1111,1111,……….. Output : 1,2,3,4,1111 Q2: Write a program to print the frequency of all words in a given paragraph. Q3: Write a program to reverse the string word wise. Eg: I/P : “I am a boy” O/P: “boy a am I” Q4: Write a program to explain producer consumer program using threads. Q5: (Only theory) What data structures will you use to design a garbage collector. Round 2: F2F Q1: Given an array in which all numbers except two are repeated once. (i.e. we have 2n+2 numbers and n numbers are occurring twice and remaining two have occurred once). Find those two numbers in the most efficient way Q 2 : Given a linked list with next and arbitrary pointers, clone it. Q 3 : A lot of questions around Spring, Hibernate, REST, Dependency Injection, AOP etc. Q4 : Reverse a linked list in groups of n. Round 3: F2F Q1: Vertical level order traversal of a tree. Q2: Reverse the second half of the linked list in the most efficient way. Q3: Find the merging point of two linked list. Q4: Write a function to generate all possible n pairs of balanced parentheses. For example, if n=1{} for n=2 {}{} {{}} Q5 : Again a lot of drilling questions on Java, Spring, MVC, Singleton, Hibernate, REST. Round 4 : F2F (Manager/Architect) This round had questions more around various technology stacks, Design Patterns ( Interceptor, Singleton, Publisher Subscriber, MVC etc etc ) UI Templates REST Spring Java In memory database Log appenders Round 5: F2F ( H.R. ) Generic questions like why do you want to join Makemytrip. What are your career aspirations. How do you think it aligns with MMT. Thanks to geeksforgeeks for the awesome database of questions, that helped me clear the interview.\nAll Practice Problems for MakeMyTrip !\nRelated Practice Problems\nPrint a Binary Tree in Vertical Order\nIntersection Point in Y Shapped Linked Lists\nClone a linked list with next and random pointer\nReverse a Linked List in groups of given size.\nFinding the numbers\n\nComment\nMore info\nCampus Training Program\nNext Article\nMakeMyTrip Interview Experience | Set 4'}, {'title': 'Adobe Interview Experience 5 Rounds', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-5-rounds/', 'content_summary': 'Online Round(On Cocubes):- In this round there were an MCQ section(contained questions on aptitude and CS fundamentals) and a coding section( was pretty simple with just 3 basic level questions). \n\nTechnical Round 1:- ? (at Noida) \nDS Questions:- First question was to write a code of finding an intersection point in the merged linked lists, first I gave the stack based approach then optimized with the hashtable based approach. \nNext question was to find the pairs of numbers which make a given sum in the given array , only the approach was asked, so initially I gave loop based approach then optimized it with a hashing. Just then he asked me to find triplets which could make a sum as zero. \nThen third question was to find the minimum length section of an array which could be sorted to make the whole array as sorted , this was a little bit tricky, but the interviewer was helpful in giving couple of hints. \n\nCS Fundamentals:- \nI mentioned in my introduction that I am proficient in Java so he asked me some basic questions like difference between abstract class and interface and questions like what is inheritance how it is useful . There were also some questions on OS. \n\nTechnical Round 2:- \nHe asked me the working of google maps, what is the algorithm behind that and how would I implement it and if I need to find out the nearby clinics then what is the best way to do that. Then he asked me difference between BFS and DFS which one is better for the above functionality. Then he asked me a random question that GPS would work without internet or not. Then I was asked to code random number generating function which does not generates a pregenerated number twice. Then a couple of questions related to my projects. \nThen he asked OS questions, like what is Thrashing and how to prevent it, if you are rich then would you buy a 500 gb ram, if no why?( my ans-No, as Searching in ram then will become a costly operation) then there were questions on Paging, TLB, Virtual memory, Logical address etc. \n\nTechnical Round 3:- \nFirst he asked me about my projects(in detail this time), then he gave me a system design problem, to design a lift management system with multiple lifts and write the classes required tothe same, his main focus was on to find an algorithm to allocate lift so as to minimize the waiting time spent by a person.Firstly he asked me to find all the edge cases like if 2 lifts are equally far \nfrom a requesting floors then how will you allocate, so after a heavy discussion he asked me to write the code. \nThen some non-technical questions were asked like what would you change in your past in your education and why. \n\nHR Round:- \nIt was just a 10 min round.He asked general questions about the college placements then if I already had any offer and its details.Then I asked him that whether freshers are hired for purely research work in Adobe and if not then what is the procedure to get there. \n\nTips:- \nMake sure you brush up your CS fundamentals(especially OS and the language in which you are proficient ). They watch you throughout the day, even if you are sitting outside the interview hall, so be aware of that. It is ok not to answer all the questions correctly, you might go wrong with some but don’t let that demoralize or demotivate you as you need to be energetic till the end. \n\nAll the best!!\n \nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (5 Rounds)'}]",https://www.geeksforgeeks.org/problems/intersection-point-in-y-shaped-linked-lists--170645/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:37:15.927337,GeeksforGeeks,Intersection Point in Y Shaped Linked Lists,Medium,55.77%,29K+,Not available,"Given two singly linked lists, write a program to get the point where two linked lists intersect each other. If the linked list does not merge at any point, it should return -1.
Examples:
Input: LinkedList1: 3->6->9->common, LinkedList2: 10->common, common: 15->30->NULL
Output: 15
Explanation:
Input: LinkedList1: 4->1->common, LinkedList2: 5->6->1->common, common: 8->4->5->NULL
Output: 8
Explanation:
Expected Time Complexity: O(n+m)
Expected Space Complexity: O(n)
Constraints:
Length of Both LinkedList before the intersection(if any) is greater than 0.
1 ≤ no. of nodes in LinkedList1, LinkedList2 ≤ 105
-1000 ≤ node->data ≤ 1000
Challenge: Try to solve the problem without using any extra space.",Not specified,Not specified,"['VMWare', 'Flipkart', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'D-E-Shaw', 'FactSet', 'MakeMyTrip', 'Visa', 'Goldman Sachs', 'MAQ Software', 'Adobe', 'Qualcomm']","['Linked List', 'Data Structures']"
"[{'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}]",https://www.geeksforgeeks.org/problems/flattening-a-linked-list/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:37:38.191988,GeeksforGeeks,Flattening a Linked List,Medium,51.53%,185K+,40m,"Given a linked list containing n head nodes where every node in the linked list contains two pointers:
(i) next points to the next node in the list.
(ii) bottom pointer to a sub-linked list where the current node is the head.
Each of the sub-linked lists nodes and the head nodes are sorted in ascending order based on their data.
Your task is to flatten the linked list such that all the nodes appear in a single level while maintaining the sorted order.
Note:
1. ↓ represents the bottom pointer and -> represents the next pointer.
2. The flattened list will be printed using the bottom pointer instead of the next pointer.
Examples:
Input:
Output: 5-> 7-> 8-> 10 -> 19-> 20-> 22-> 28-> 30-> 35-> 40-> 45-> 50.
Explanation:
Bottom pointer of 5 is pointing to 7.
Bottom pointer of 7 is pointing to 8.
Bottom pointer of 8 is pointing to 10 and so on.
Input:
Output: 5-> 7-> 8-> 10-> 19-> 22-> 28-> 30-> 50
Explanation:
Bottom pointer of 5 is pointing to 7.
Bottom pointer of 7 is pointing to 8.
Bottom pointer of 8 is pointing to 10 and so on.
Constraints:
0 <= n <= 100
1 <= number of nodes in sub-linked list(mi) <= 50
1 <= node->data <= 104",O(n  *  n  *  m),O(n),"['Paytm', 'Flipkart', 'Amazon', 'Microsoft', 'Snapdeal', '24*7 Innovation Labs', 'Payu', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Drishti-Soft']","['Linked List', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 10 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-10-on-campus/', 'content_summary': ""Accolite Software visited our campus. Firstly, they presented a pre-placement-talk where they talked about their work culture, their biggest clients, their intra, fests, etc. The work life aspect was discussed too. \n\nFollowing this, they conducted Online test for 30 min that included MCQ questions from \nC, C++ : finding o/p, complexity, bugs if any \nDBMS: Join queries, indexing and theory \nOS and Networks: Basic theory Networking \nand Little Quantitative Aptitude. \nAround 200 Students appeared for this round. 11 were shortlisted for first round interviews. I got through this round. For the next top 10, a coding round of pen/paper (1 hour) was carried out from where only 2 were shortlisted. There were three questions as narrated by my friends. One on tries, one on heap, one on sorting. Thus, 13 people made it for technical interviews. \n\nRound 1 FFS : 1 hour \nThe two interviewers congratulated me for reaching this far. \n\n1) After a little introduction, they threw me a puzzle. 3 _ 1 _ 3 _ 6 = 8. I had to fill the spaces with any operator I can, to satisfy the equality. I thought for about 5 mins. Then I gave the following: (3 ^ 1) & 3 + 6. They were happy with the not so conventional approach but directed me towards a simpler construction. See if you can find it yourself \n\n2) Then followed a barrage of sql queries, probably as I had mentioned databases in my resume. I suggest everyone to practice join queries. \n\n3) Next question was to detect the merging point of two linked lists with length m and n. I initially gave the hashmap solution which he asked me to code. Then he asked for other less expensive ways. I reduced problem into finding the start node of a loop, if modification was allowed, otherwise, advancing the longer by the difference between the two lengths. Full working code was required along with the time and space complexities. \n\n4) Another question was to find a triplet in the array that sums to a particular value. \nAfter this, I was notified to get ready for round 2. Five folks were eliminated. \n\nRound 2 FFS: 2 hours \n1) Given a huge array consisting of integers in a certain range. How would you solve the queries of the following type : Report the number of integers lying in the range between l to r. I built a prefix array as in the counting sort. Now all queries could be answered in O(1). He modified the question by stating that the range now was always a multiple of some number. I proceeded by dividing the i/p into buckets and then building the prefix array. Full code was asked. \n\n2) Given a huge numbers of strings in an arraylist, report the longest common prefix of the strings. I solved this by creating a trie with an augmented node storing depth and count at each node. Only the important modules were asked to be coded. \n\n3) Short discussion of my summer internship, why I used JAVA, what challenges did I face. He asked me to explain the differences between treeMap, linkedHashMap and hashMap. \n\n4) I had mentioned a project carried out on Linux Mint. He asked me the basic commands of linux, namely cat, grep, ps, df along with syntax for git commands. \n\n5) Assume a traveller wants to books a cab. Write an automated server that schedules a cab present in the region pool of the user in a way that maximizes the benefit to the company. You can make assumptions like GPS availability. At first, I had no clue where I was heading. Then I broke down the problem into structures and assumed the necessary. This was more of a discussion sort of thing, as this had no definitive answer. I had to write the pseudocode of anything I thought. 30 mins went straight into this question. \n\n6) Core JAVA Questions. 7-8 of them including but not limited to new operator, constructor, static blocks, synchronized keywords etc. \n3 were eliminated. I got through to round 3. \n\nRound 3: FFS 1:15 hours \nThe interviewer greeted and informed me of this round being a techno-managerial round. \n1) You are the manager of a restaurant. Given the archives of past purchases of raw materials per day of the week, write an algorithm that forecasts the amount of each raw material to be purchased so as to cover the next week requirements. Mention data structures used, if any. After thinking for a while, I proceeded by the method of weighted averages, assigned more weight to weekends over weekdays, special diets etc. I said, I being the manager would use the trend adjustment factor to forecast the next demand (economics helped Explained this using an example. \n\n2) Given an i/p stream of train coaches in the following format: XY where X: uppercase letter, Y: a number, what is the most efficient way to sort the coaches such that at the end of the stream, we can get the sorted order in O(1). eg. A3, B2, C10, A1 -> o/p A1, A3, B2, C10. \nAlso prove why comparison sorts have a lower bound of O(nlogn) where n is the size of the input. \n\n3) How do you delete an arbitrary item from a heap. Write the code. Even the redundant lines in my code were subjected to scrutiny. \nI wasn't confident of my performance in this round, but stayed positive. It had been 10 hours of waiting. \n\nHR Round(15 mins) \nThe HR Ma'am was very friendly. Asked me what I knew about the company so far. I had a feeling I was being tested for my listening skills against the morning pre-placement presentation. \n\nI would like to thanks geeksforgeeks for their content that helped me through. A word of advice: Practice pen and paper codes. Never lie on your resume, it may back-fire at any moment. Inner peace is a must Cheers! \n\n \n\n\nRelated Practice ProblemsIntersection Point in Y Shapped Linked ListsTriplet Sum in Array\n\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 10 (On-Campus)""}, {'title': 'Qualcomm Interview Experience Set 9 Experienced Linkedin Invite', 'url': 'https://www.geeksforgeeks.org/qualcomm-interview-experience-set-9-experienced-linkedin-invite/', 'content_summary': 'I have applied for Graphics Software Engineer position through LinkedIn. I was called for interview after 2 weeks of applying. Interview took place in Bangalore office. Round 1 (60 minute): 1. Explain BE project (Satellite image processing) 2. BFS and DFS (Example and code) 3. How to find loops in linked list? 4. Merge sort ad Quick sort (Code and timing complexity) 5. How pivot element in quick sort affects the timing complexity? 6. Binary search 7. Virtual function 8. Overloading vs Overriding 9. Find the intersection of two linked list (2 methods: brute force and nlogn complexity one) Round 2 (30 min): 1. Questions on internship experience (Computer Vision domain) 2. Multidimensional images 3. Masking operation 4. Edge detection 5. Face detection 6. General steps in image processing 7. Image segmentation techniques 8. How simulation model of any HW is designed? 9. How you compare outputs of HW model and equivalent SW model? Round 3 (30 min): 1. malloc vs calloc 2. Write a python script to find an occurrence of a word in file 3. What are timing complexity notations? 4. Create and insert function in Binary search tree (BST) 5. Access specifiers with example 6. 1 year job experience (SAP BI). Steps in SAP BI? 7. Puzzle: With minimum number of moves change given shape ito another shape (matchstick) 6. Puzzle: One man does the exact double amount of work than the previous day. It completed the total work in 15 days then how many days it require to completed 50% of work?\nAll Practice Problems for Qualcomm !\n\nComment\nMore info\nCampus Training Program\nNext Article\nQualcomm Interview Experience | Set 9 (Experienced through Linkedin Invite)'}, {'title': 'Makemytrip Interview Experience Set 4', 'url': 'https://www.geeksforgeeks.org/makemytrip-interview-experience-set-4/', 'content_summary': 'Round 1 : Written : Q1. Given a stream of around billion numbers in an array, which has approximately only 1000 unique numbers. Print the unique numbers. Complexity should be less than O(n). Eg: Input: 1,1,1,1,….2,2,2,…3,4,4,4,4……1111,1111,……….. Output : 1,2,3,4,1111 Q2: Write a program to print the frequency of all words in a given paragraph. Q3: Write a program to reverse the string word wise. Eg: I/P : “I am a boy” O/P: “boy a am I” Q4: Write a program to explain producer consumer program using threads. Q5: (Only theory) What data structures will you use to design a garbage collector. Round 2: F2F Q1: Given an array in which all numbers except two are repeated once. (i.e. we have 2n+2 numbers and n numbers are occurring twice and remaining two have occurred once). Find those two numbers in the most efficient way Q 2 : Given a linked list with next and arbitrary pointers, clone it. Q 3 : A lot of questions around Spring, Hibernate, REST, Dependency Injection, AOP etc. Q4 : Reverse a linked list in groups of n. Round 3: F2F Q1: Vertical level order traversal of a tree. Q2: Reverse the second half of the linked list in the most efficient way. Q3: Find the merging point of two linked list. Q4: Write a function to generate all possible n pairs of balanced parentheses. For example, if n=1{} for n=2 {}{} {{}} Q5 : Again a lot of drilling questions on Java, Spring, MVC, Singleton, Hibernate, REST. Round 4 : F2F (Manager/Architect) This round had questions more around various technology stacks, Design Patterns ( Interceptor, Singleton, Publisher Subscriber, MVC etc etc ) UI Templates REST Spring Java In memory database Log appenders Round 5: F2F ( H.R. ) Generic questions like why do you want to join Makemytrip. What are your career aspirations. How do you think it aligns with MMT. Thanks to geeksforgeeks for the awesome database of questions, that helped me clear the interview.\nAll Practice Problems for MakeMyTrip !\nRelated Practice Problems\nPrint a Binary Tree in Vertical Order\nIntersection Point in Y Shapped Linked Lists\nClone a linked list with next and random pointer\nReverse a Linked List in groups of given size.\nFinding the numbers\n\nComment\nMore info\nCampus Training Program\nNext Article\nMakeMyTrip Interview Experience | Set 4'}, {'title': 'Adobe Interview Experience 5 Rounds', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-5-rounds/', 'content_summary': 'Online Round(On Cocubes):- In this round there were an MCQ section(contained questions on aptitude and CS fundamentals) and a coding section( was pretty simple with just 3 basic level questions). \n\nTechnical Round 1:- ? (at Noida) \nDS Questions:- First question was to write a code of finding an intersection point in the merged linked lists, first I gave the stack based approach then optimized with the hashtable based approach. \nNext question was to find the pairs of numbers which make a given sum in the given array , only the approach was asked, so initially I gave loop based approach then optimized it with a hashing. Just then he asked me to find triplets which could make a sum as zero. \nThen third question was to find the minimum length section of an array which could be sorted to make the whole array as sorted , this was a little bit tricky, but the interviewer was helpful in giving couple of hints. \n\nCS Fundamentals:- \nI mentioned in my introduction that I am proficient in Java so he asked me some basic questions like difference between abstract class and interface and questions like what is inheritance how it is useful . There were also some questions on OS. \n\nTechnical Round 2:- \nHe asked me the working of google maps, what is the algorithm behind that and how would I implement it and if I need to find out the nearby clinics then what is the best way to do that. Then he asked me difference between BFS and DFS which one is better for the above functionality. Then he asked me a random question that GPS would work without internet or not. Then I was asked to code random number generating function which does not generates a pregenerated number twice. Then a couple of questions related to my projects. \nThen he asked OS questions, like what is Thrashing and how to prevent it, if you are rich then would you buy a 500 gb ram, if no why?( my ans-No, as Searching in ram then will become a costly operation) then there were questions on Paging, TLB, Virtual memory, Logical address etc. \n\nTechnical Round 3:- \nFirst he asked me about my projects(in detail this time), then he gave me a system design problem, to design a lift management system with multiple lifts and write the classes required tothe same, his main focus was on to find an algorithm to allocate lift so as to minimize the waiting time spent by a person.Firstly he asked me to find all the edge cases like if 2 lifts are equally far \nfrom a requesting floors then how will you allocate, so after a heavy discussion he asked me to write the code. \nThen some non-technical questions were asked like what would you change in your past in your education and why. \n\nHR Round:- \nIt was just a 10 min round.He asked general questions about the college placements then if I already had any offer and its details.Then I asked him that whether freshers are hired for purely research work in Adobe and if not then what is the procedure to get there. \n\nTips:- \nMake sure you brush up your CS fundamentals(especially OS and the language in which you are proficient ). They watch you throughout the day, even if you are sitting outside the interview hall, so be aware of that. It is ok not to answer all the questions correctly, you might go wrong with some but don’t let that demoralize or demotivate you as you need to be energetic till the end. \n\nAll the best!!\n \nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (5 Rounds)'}]",https://www.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:37:52.054710,GeeksforGeeks,Intersection in Y Shaped Lists,Medium,44.67%,301K+,45m,"Given the head of two singly linked lists, return the point where these two linked lists intersect.
Note: It is guaranteed that the intersected node always exists.
Custom Input Format:
head1 contains the nodes before intersection in list1
head2 contains the nodes before intersection in list2
CommonList contains the nodes after intersection of list1 and list2.
Examples:
Input: head1 : 4 -> 4 -> 4 -> 4 -> 4, head2 : 4 -> 4 -> 4
Output: 4
Explanation: From the above image, it is clearly seen that the common part is 4 -> 4 whose starting point is 4.
Input: head1 : 4 -> 1 -> 8 -> 4 -> 5, head2 : 5 -> 6 -> 1 -> 8 -> 4 -> 5
Output: 8
Explanation: From the above image, it is clearly seen that the common part is 8 -> 4 -> 5 whose starting point is 8.
Constraints:
2 ≤ total number of nodes ≤ 2*105
-104 ≤ node->data ≤ 104",O(n + m),O(1),"['VMWare', 'Flipkart', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'D-E-Shaw', 'FactSet', 'MakeMyTrip', 'Visa', 'Goldman Sachs', 'MAQ Software', 'Adobe', 'Qualcomm']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/equal-to-product3836/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:38:12.340432,GeeksforGeeks,Product Pair,Medium,17.34%,71K+,Not available,"Given an array, arr[] of distinct elements, and a number x, find if there is a pair in arr[] with a product equal to x. Return true if there exists such pair otherwise false.
Examples:
Input: arr[] = [10, 20, 9, 40], x = 400
Output: true
Explanation: As 10 * 40 = 400, the answer is true.
Input: arr[] = [-10, 20, 9, -40], x = 30
Output: false
Explanation: No pair exists with product 30.
Expected Time Complexity: O(n)
Expected Space Complexity: O(n)
Constraints:
1 ≤ arr.size ≤ 105
-108 ≤ |arri| ≤ 108
-1018 ≤ |x| ≤ 1018",Not specified,Not specified,"['Amazon', 'Visa']","['Arrays', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/implement-stack-using-array/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:38:23.706285,GeeksforGeeks,Implement stack using array,Basic,54.76%,278K+,25m,"Write a program to implement a Stack using Array. Your task is to use the class as shown in the comments in the code editor and complete the functions push() and pop() to implement a stack. The push() method takes one argument, an integer 'x' to be pushed into the stack and pop() which returns an integer present at the top and popped out from the stack. If the stack is empty then return -1 from the pop() method.
Note: The input is given in form of queries. Since there are two operations push() and pop(), there is two types of queries as described below:
(i) 1 x   (a query of this type means  pushing 'x' into the stack)
(ii) 2     (a query of this type means to pop an element from the stack and print the popped element)
Input contains separated by space and as described above.
Examples :
Input: 1 2 1 3 2 1 4 2
Output: 3, 4
Explanation:
push(2) the stack will be {2}
push(3) the stack will be {2 3}
pop() poped element will be 3,
the stack will be {2}
push(4) the stack will be {2 4}
pop() poped element will be 4
Input: 2 1 4 1 5 2
Output: -1, 5
Expected Time Complexity: O(1)
Expected Space Complexity: O(1)
Constraints:
1 <= numbers of calls made to push, pop <= 100
1 <= x <= 100",Not specified,Not specified,"['FactSet', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Kritikal Solutions']","['Arrays', 'Stack', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 4 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-4-on-campus/', 'content_summary': ""Round 1 (Written) \nAround 140 students appeared for the offline test. \n\n\nThere were 20 MCQs that to be done in (30 minutes), questions were from OS,DBMS,Datastructures. \nAfter that coding round was there (paper coding) in which 3 questions were given and we have to attempt any 2 (1 hour) \n\n1. Write your own sqrt() function. the function should return square root if it is a perfect square else return floor(sqrt(x)) \n2. Given an array containing positive and negative integers. you have to find the smallest missing positive number. your code should run in O(n) time and O(1) space. \n3. Given an array of strings, find whether the strings can be chained or not to form a circle. A string x can be put before another string y if last character of x is same as first character of y. \n\nAfter round-1 , 19 people were shortlisted for the interviews. \n\n\n\n\nRound 2 (Technical) (1:30 hr) \n1. Tell me about yourself. Meanwhile he(interviewer) looked into my CV and asked about my projects. \nI have done 3 projects so he started discussion CUDA and parallel programming and how you implemented over images to detect edges and how much gain factor achieved. \nsecondly,I have made an project on online voting system so he asked me to draw E-R diagram, schemas and the relationship between them and their functionalities.About (25-30) minutes discussion. \n\n2. Given a BST, you have to find the kth smallest element in it in O(n) time and O(1) space. \n\n3. Suppose you have server where multiple requests are coming at time to,t1,t2...Now suppose a user hits at any particular time t on the server then server should return the last request. you have to design the datastructure for the same. \nI suggested that we can use stack that will return the last request, he then asked me to do for last 10 requests then I suggested to use array of structures which will store request no. and timestamp along with them.Now at any time t we can move 10 elements back but he said that suppose user hits frequently then every time i will have to traverse back again and again so time complexity will be much high, I agreed and suggested another solution similar to LRU implementation so that the requests which are coming frequently can be processed faster. then he modified question that user wants requests of last 1 minute and he gave a hint that is it necessary to store all requests can we not just store requests of every 1 min only,then suddenly it clicked to me, I suggested to use deque for 60 secs now suppose request arrives at 61st sec then we can just add that at rear and remove one from front maintaining a window of 60 seconds.He was satisfied but he want that no deletion should be there so I told him to use circular deque so that we can replace previous elements.He was completely satisfied now with the approach.(About 35 min. discussion) \n\n4. Given an array containing prices of a share of 30 days.A person has 1 share which he can buy and sell any number of times, you have to find the maximum profit which can be earned. \nI suggested one approach to create two auxiliary array MIN from left and MAX from right and traverse both simultaneously if difference between MAX[i] and MIN[i] is greater than maxDiff then update maxDIff and store current index and add to sum if index+1 is not equal to current iteration index and finally return sum.He tried some test cases over my code and found that for some cases it was giving wrong answer,then he asked me that how is my command over dynamic programming,I told I know only the standard ones and no other experience,then he said this question is of DP but he was happy to see my approach.(About 20-25 min.) \n\n\n\n\nRound 3 (Technical) (1:30 hr) \n1. She(interviewer) asked me if I attempted 3rd question in written test, I said I attempted only 1st and 2nd, then she gave me paper and told to implement the 3rd question. \nI suggested an approach to use two arrays of structures(for first characters and last characters) which will contain boolean value to mark presence of character in string and also its index. Now compare two arrays and see that if both arrays have same boolean value and different indices for all first and last characters. If so then strings can form a chain else not.She was in doubt for my solution so she found a testcase where my code was giving wrong answer,so she told me to look for another solution,I came up with another approach and told her that we can make a directed graph from first and last characters and then traverse it in DFS, now suppose if the visited node is visited again and count of total visited nodes is same as total nodes then we can say that strings will form a chain, now she was satisfied with approach and asked me to write code, now as my graph was weak i was in shock,so she said to just write the pseudocode. \n\n2. Given a BST, you have to find the kth largest element in it in O(n) time and O(1) space. \nI suggested to declare a static variable count which will increment count if node visited in inorder and if count becomes k, I will print that node's data and return. Then she asked me how static works and difference between global and static. \n\n3. Given a mobile keypad of say nokia phone and a dictionary which has all the meaningful words which can be formed, suppose now user types some number(input) then your program must suggest all the meaningful words which are present in dictionary.Before implementing this she asked me the datastructure to store the dictionary efficiently and then how will you use this datastructure to make code. \nAt first, I suggested I will store dictionary in 2-D array and lexicograpphically sort it, now suppose user types a number the string starting with that character is searched in the array. she said to reduce complexity because dictionary may contain 1000s of words,then I suggested to use trie datastructure to store and search the string, she was satisfied now and asked me to explain the concept. \n4.Given preorder and postorder of a graph, how can you construct the graph. \nAs I heard this question, i was stuck for 2 minutes but then I said as far as graph is concerned I dont know about it but a unique tree cannot be constructed with preorder and postorder so as graph,so inorder is needed, she was happy and agreed on answer. \n\n\n\n\nRound 4 (Technical) (2:30 hr) \n1. Suppose a linked list is given and there is a loop, you have to find orphan nodes in O(n) time. orphan nodes are the nodes outside the loop. \n\n2. Design a BRTS traffic signalling system such that no two vehicle clashes. Note that BRTS bus will follow the BRTS traffic lights B1,B2,B3,B4 in 4 directions and regular traffic will follow regular traffic lights R1,R2,R3,R4 only. In input only maximum cycle time was given(time after which the process repeates) check for all corner cases (traffic lights have two states only (RED and GREEN)).you have to tell any one possible combination of traffic lights under maximum cycle time. (About 1hr discussion). \n\n3. Suppose a linked list is given but we dont know the count of nodes, you have to find the kth node from last without counting the nodes. \n4. Given an array of n integers such some elements are in the range 0 to n-1 and some out of range may be negative.You have to rearrange array such that all elements which are in range appear on their index and rest appear in sorted manner for indexes not present.This should be done in O(n) time and O(1) space. \nEg- suppose n=6 ,4 5 2 3 6 -3 output= -3,6,2,3,4,5 \n\n5. How can you implement stack using queue/queues. \n6. How can you sort the elements with the help of queue. \nI suggested one O(n) time solution along with O(n) extra space.He asked to do in O(1) space so I suggested deque, he seemed satisfied. \n\nonly 4 were selected till this round (I was one of them) \n\nRound 5 (Bar Raiser) (30 minutes) \n\n1. find the length of longest palindrome in a string starting from index 0. \n2. find if a string A is present in string B or not. \n3. find the length of longest prefix in a string \n\nAfter this 2 were selected finally and unfortunately I was not amongst them as they might have thought i was little stress out. At last I would suggest that your approach and concepts must be strong as they always give questions with some variations. \n\nRelated Practice ProblemsSmallest Positive missing numberCount SquaresCircle of stringsCheck for subsequenceStock buy and sellLongest Palindrome in a String\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 4 (On-Campus)""}, {'title': 'Amazon Interview Experience Set 412 Sde Ii', 'url': 'https://www.geeksforgeeks.org/amazon-interview-experience-set-412-sde-ii/', 'content_summary': ""Overall process time : 2 months(Sep'17 to Nov17) Overall 60+ people Total Rounds : 6 Overall Difficulty : 2.5 - 3 Round 1: (3 codes on paper )\nGiven a set of yesterday Amazon stock prices {2, -3, 5, 8, 1} Write a code to buy and sell those stocks at maximum profit.  Before sell, you must buy it at minimum price.        There should be one minute gap between buy and sell. Gain maximum profit by buying and selling 1 unit (very simple need to find min and max, I did it using thread join) GeeksforGeeks Link\nConvert a BST to a sum tree\nGiven a 1D Array. Return True if there exists an element where a[i]+a[j] = 0 && i!=j. Reference : Find Pair Given Difference\nInput: arr=(2,-3,4,1,-6,-4,1}\nOutput: True\nInput: arr={2,3,4,1,-6,4,1}\nOutput: False\nRound 2:\nRegular Expression parser like finite state automata Example: a*, aab*, abcb*c, ba*.c*, a.b, a*b etc etc and edge cases\nDesign a ranking system. We have an infinite supply of words ending with ‘.’ We need to implement a reader program that ranks words on the basis of certain criteria\n          Example:   This is my cat.\n          This house belongs to my uncle\n          An amazing country with so many tourist places And so on..\nRanking System criteria : rank the words on the basis of occurrence, for example Output : This:2, is:2, my:2… highest rank (sorted asc or desc based on  provided flag) Design it completely and scalable Ranking System.\nDesign a debugger\nRound 3:\nExplain your greatest accomplished project and what big you achieved? – Details of flow and architecture\nFind a longest palindrome String\nDesign Amazon Cart System. (HLD and LLD ) Discussion on solution.\nRound 4:\nGiven a Binary Tree, Replace every node with its larger Same as sum tree GeeksforGeeks\nPrint min & max (both) of all sub array of size k  Reference :\nGiven an integer array and find first k largest elements. Focus was on complexity of the code GeeksforGeeks Link\nGiven an integer array and an integer value X, return three elements in that array such that sum of them equals to X. GeeksforGeeks Link\nThis was the last round for the day as team had to return to Bangalore. HR shortlisted me along with other two candidates.  Due to Diwali they were falling short of staff for managerial rounds, So it look a month for other two rounds which happened in their Gurgaon office on VC\nRound 5:\nBar Raiser: (Duration : 1.15 hours)\nTell me about yourself\nWhat were the important projects you have worked on\nWhat was your contribution\nExplain Architecture, Design and detailed discussion\nWhat were challenges you faced and how did you solve them\nDesign a notification system “In Shorts”\nRound 6:\nHiring Manager :\n(Duration : 1.15 hours)\nIntroduction & very detailed project discussion\nBehavioral Questions –\nDid you encounter any conflicts with colleague or manager and how did you solve them\nHave you ever delivered more than expectations\nHave you ever completed project before deadline\nHave you have handled a client/customer efficiently and what did you\nDid you ever design a system/process\nWhat were the most critical projects you have worked on\nHow did you handle a critical situation or helped a colleague\nTell me about a time when you had to work on a project with unclear responsibilities\nHave you mentored someone? What were challenges you faced and how did you resolve\nWhat important technical decisions did you take and how did it help your team?\nWhy Amazon\nI recommend GeeksForGeeks for technical coding rounds, educative.io for design and\nhttp://kraftshala.com/how-to-raise-the-bar-in-the-amazon-interview/\nfor behavioral. Pretty much covers all the details. They announced result after a week and I was selected\nAll Practice Problems for Amazon !\n\n\nComment\nMore info\nCampus Training Program\nNext Article\nAmazon interview Experience | Set 412 (SDE II)""}]",https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string1956/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:38:34.551539,GeeksforGeeks,Longest Palindromic Substring,Medium,36.96%,42K+,25m,"Given a string s, return the longest palindromic substring in s.
Substring of string s is a contiguous sequence of characters within a string, i.e. s[ i . . . . j ] where 0 ≤ i ≤ j < len(s).
Palindromic string is a string which reads the same forwards and backwards. More formally, s is palindrome if reverse(s) = s.
If there are multiple longest palindromic substrings, return the substring with the least starting index .
Examples :
Input: s = ""aaaabbaa""
Output: aabbaa
Explanation: The longest palindrome string present in
the given string is ""aabbaa"".
Input: s = ""geeks""
Output: ee
Explanation: The longest palindrome string present in
the given string is ""ee"".
Constraints:
1 ≤ |s| ≤ 104",O(n^2),O(1),"['Zoho', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'MakeMyTrip', 'Visa', 'Walmart', 'Qualcomm', 'Groupon']","['Strings', 'Data Structures', 'Dynamic Programming']"
"[{'title': 'Accolite Interview Experience Set 16 Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-16-campus/', 'content_summary': 'Round 1 (APTITUDE) :\n20 mcqs in 30 minutes of time\n-0.25 negative marking\nQuestions were from core computer science subjects and one blood relation problem in general section\nThe cut was 10/20\nAround 700 people attended they selected 20 Round 2 (WRITTEN CODING) :\n3 written coding questions(one was Left view of a tree) to be solved in one hour of time and i solved two and i was selected for the next round\nIn this round out of 20 they selected 10.\nRound 3 (TECHNICAL HR-1) :\nI was asked 8 Queens problem\nGiven an array find two non repeating elements in linear time complexity and no extra space\nRound 4 (TECHNICAL HR-2):\nBasic questions from my resume and projects.\nSearch in a row wise and column wise sorted matrix\nOne design question.\nRound 5 (Technical HR-3):\nThe Stock Span Problem\nFirst i came up with the naive solution and then came up with the idea of using stack.\nIn each round the coding that you wrote in the previous rounds will always get passed through and will be analyzed at each rounds.\nRound 6 (General HR):\nBasic questions on my resume\nPreferred work places\nWhat do you expect in Accolite?\nWhy Accolite?\nHobbies\nStrengths and Weaknesses\nFinally I was the only one who got selected. Note:\nGeeksforgeeks was very helpful and more than enough.Therefore practice hard in GeeksforGeeks\nPractice paper coding because we will get a lot of mistakes while writing the code on paper.\nThere requires a slight amount of luck on that day of interview so please work very hard to mitigate that factor of luck\nRelated Practice Problems\nStock span problem\nN-Queen Problem\nSearch in a matrix\nFinding the numbers\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 16 (On-Campus)'}]",https://www.geeksforgeeks.org/problems/n-queen-problem0315/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:38:50.153026,GeeksforGeeks,N-Queen Problem,Hard,35.43%,107K+,25m,"The n-queens puzzle is the problem of placing n queens on a (n × n) chessboard such that no two queens can attack each other. Note that two queens attack each other if they are placed on the same row, the same column, or the same diagonal.
Given an integer n, find all distinct solutions to the n-queens puzzle.
You can return your answer in any order but each solution should represent a distinct board configuration of the queen placements, where the solutions are represented as permutations of [1, 2, 3, ..., n]. In this representation, the number in the ith position denotes the row in which the queen is placed in the ith column.
For eg. below figure represents a chessboard [3 1 4 2].
Examples:
Input: n = 1
Output: [1]
Explaination: Only one queen can be placed in the single cell available.
Input: n = 4
Output: [[2 4 1 3 ] [3 1 4 2 ]]
Explaination: There are 2 possible solutions for n = 4.
Input: n = 2
Output: []
Explaination: There are no possible solutions for n = 2.
Constraints:
1 ≤ n ≤ 10",O(n!),O(n^2),"['Accolite', 'Amazon', 'Microsoft', 'D-E-Shaw', 'Visa', 'MAQ Software', 'Amdocs', 'Twitter']","['Backtracking', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/the-lazy-caterers-problem2527/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:39:04.003255,GeeksforGeeks,The Lazy Caterer's Problem,Basic,60.14%,12K+,10m,"Given an integer n, denoting the number of cuts that can be made on a pancake, find the maximum number of pieces that can be formed by making n cuts.
NOTE: Cuts can't be horizontal.
Example 1:
Input: N = 5
Output: 16
Explanation: 16 pieces can be formed by
making 5 cuts.
Example 2:
Input: N = 3
Output: 7
Explanation: 7 pieces can be formed by
making 3 cuts.
Your Task:
You don't need to read or print anything. Your task is to complete the function maximum_Cuts() which takes n as input parameter and returns the maximum number of pieces that can be formed by making n cuts.
Expected Time Complexity: O(1)
Expected Space Complexity: O(1)
Constraints:
1 <= N <= 10000",Not specified,Not specified,['Visa'],"['Mathematical', 'Algorithms']"
"[{'title': 'De Shaw Off Campus Fresher Interview Experience', 'url': 'https://www.geeksforgeeks.org/de-shaw-off-campus-fresher-interview-experience/', 'content_summary': ""How I Applied? \nI applied through their careers page https://www.deshawindia.com/OpenPositions.shtml . \nI got to know about their recruiting through a friend. Then got an invitation for their OffCampus test after a week of applying.\n\nHackerrank  Test : \nThe test was for 100 marks with 90 minutes time limit. The format of the test is as follows:\nProgramming Section: It had 2 coding questions of 20 and 40 marks each, with a time limit of 50 minutes.\nMCQ Section: This had 10 technical and 10 aptitude questions, with a time limit of 20 minutes each. Each correct answer will carry 2 marks and the wrong answer will carry negative 0.5 marks.\nTechnical questions will cover Data structures & algorithms, Operating systems, Database systems, SQL, and Networks.\nAptitude questions will cover Quantitative Aptitude, Problem-solving, and Logical & verbal Reasoning.\nThe first Coding question was easy, something related to array manipulation and implementation. Another one was about finding kth permutation of a string (k<=1e9).\nRound 1: CodePair Round 1.5 hr\nI got a reply from them after a month of the test. In CodePair Round the interviewer asked me to solve two programming questions. The first one was quite easy and straight forward it said to find the number of ways a given number can be expressed as a sum of more than 1 consecutive natural numbers. You can find the link https://www.geeksforgeeks.org/problems/count-of-sum-of-consecutives3741/1. \nThe second one was: Given a matrix(n * m) and a queen positioned at (n-1,m/2). Find the number of ways in which the queen can reach cell no. (x,y) in minimum number of moves. There were Q queries of (x,y). The queen can move in any of the eight valid directions in one move. Preprocessing of O(n2) was allowed and queries were supposed to be answered in O(1).\nThen there was a small discussion on my projects and some questions regarding polymorphism, Virtual functions were asked along with other OOPS concept.\nRound 2: Technical Round 1 hr\nThis round was also on HackerRank CodePair. I was supposed to solve one programming. The question was: Given stock prizes for N days. Each day you could either buy a stock or sell some/all of the stocks you have purchased previously. It is also allowed to not perform any operation for a day.  \nBuying a stock will count as a negative addition to profit and selling will count as a positive addition to the profit. Find the maximum profit that could be achieved given the Stock prizes for N days. \nExample :  [1,5,2,100,3,2]\nBuy stocks for first three days = -1 + -5 + -2 = -8\nSell all the stocks on the fourth day = +100*4 \nDon't do anything on the fifth and sixth day as there is no way one could sell the bought stock at a higher price. Thus, maximum profit = -8 + 100*4 = 392\nMy Solution: Find the next maximum Stock price for each day and buy that stock only if there is any available higher prize. So the profit will be: \nFor each ith day buying a stock ( - stockPrize[i] ) and selling the stock at a later day with highest stock prize ( i.e. +max(stockPrize[i+1,n-1] ) ). This range maximum could be easily computed using suffix maximum, given a solution in linear time.\nApart from this coding question I was asked questions from DBMS, OS, Projects: \nWhat is a Composite Index? How does it work?\nSome SQL queries using joins.\nWhat is the significance of on condition in an outer join?\nSome questions on the Tech Stack of my Projects.\nQuestions on ReactJS, as I had some projects and internships on that.\nThe lifeCycle of React? Why React is used?  What is Virtual DOM? How does it work? etc.\nRound 3: Technical Round 1.5 hr\nThis round was also on HackerRank CodePair. Design and implement a class that can be used to allocate and de-allocate a certain amount of memory blocks. The class will initially have a fixed block of memory which will only be used to allocate memory. Say 1024 blocks.\nThey were expecting me to think and design a prototype that will work the way internally memory management works.\nDiscussion on what data structure could be used for allocating contiguous blocks of memory. What methods will be used and what will their signatures?\nWhich data structure is the most suitable and why?  What will be the complexity of the allocate and de-allocate functions? \nHow will you handle the situation of a variable amount of memory blocks?\nWhile I was implementing the prototype of the class they asked me to write Copy Constructor and also asked to overload the subscript operator for the class.\nDoes the copy constructor do a shallow copy or a deep copy? If Shallow then how will you make this a Deep Copy? What are the problems in Shallow Copy?\nThere is no right or wrong answer for the Class Design. They just want to judge you on how you could apply CS fundamentals to solve the problem and are you able to identify some flaws in the design and also they expect you to eventually solve them.\nGiven a file consisting of millions of records. The data is in a structured format i.e in a tabular format with each record consisting of many attributes. \nHow will you perform search operation on the file given the file is stored in secondary memory? Optimize it.\nWhat if the whole file can be brought into the main memory?\nSorting is not an option as data needs to be searched on different attributes, how will you optimally solve this?\nIf you are allowed to store additional data structures after doing some preprocessing on the file in order to perform an optimized search operation. What data structures will you use and how much effect it will have on optimality?\nWhat is a Trie Data Structure? Explain it's node structure and working? What is it's applications?\nHow will you optimize the memory usage in Trie?\n  A simple Game Theory question: Given Two Players A and B separated by N number of tiles. In a move, each one can move one or two-step ahead. Who will win if player A starts and each one plays alternately and optimally. The player who is not able to make any move losses the game.\nA _ _ _ _ B for n=4  \nSolution : \nIf n=1 or 2, A wins in one move. Thus, both n=1 and n=2 are winning states\nn=3, B wins as from n=3 we could go to either n=1 or n=2 and both are winning states\nThus if f(n) = 0 if B wins and \n                          1 if A wins\nf(n) = 0 if ( f(n-1)==1 and f(n-2)==1 ) \nf(n) = 1 if( f(n-1)==0 or f(n-2)==0 )\nBase cases f(2)=1 and f(1)=1This could be solved in linear time. But if you write down all the values of f() you will find that it decomposes to f(n) =  0 if n is a multiple of 3 otherwise f(n)=1.\n\nAfter a day or two, I got their call that they are willing to offer me the position. \n\nComment\nMore info\nAdvertise with us\nNext Article\nDE Shaw Off-Campus Fresher Interview Experience""}]",https://www.geeksforgeeks.org/problems/count-of-sum-of-consecutives3741/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:39:14.940283,GeeksforGeeks,Count of sum of consecutives,Medium,24.63%,21K+,20m,"Given a number N, the task is find the number of ways to represent this number as a sum of 2 or more consecutive natural numbers.
Example 1:
Input:
N = 10
Output:
1
Explanation:
10 can be reprsented as sum of two or
more consecutive numbers in only one
way. 10 = 1+2+3+4.
Example 2:
Input:
N = 15
Output:
3
Explanation:
15 can be reprsented as sum of two or
more consecutive numbers in 3 ways.
(15 = 1+2+3+4+5); (15 = 4+5+6); (15 = 7+8).
Your Task:
You don't need to read input or print anything. Your task is to complete the function getCount() which takes an Integer n as input and returns the answer.
Expected Time Complexity: O(sqrt(N))
Expected Auxiliary Space: O(1)
Constraints:
1 <= N <= 108",Not specified,Not specified,"['Visa', 'Walmart', 'Linkedin']","['Mathematical', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/-minimum-number-of-coins4426/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:39:33.808120,GeeksforGeeks,Minimum number of Coins,Easy,51.25%,87K+,Not available,"Given an infinite supply of each denomination of Indian currency { 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 } and a target value N.
Find the minimum number of coins and/or notes needed to make the change for Rs N. You must return the list containing the value of coins required.
Example 1:
Input: N = 43
Output: 20 20 2 1
Explaination:
Minimum number of coins and notes needed
to make 43.
Example 2:
Input: N = 1000
Output: 500 500
Explaination: minimum possible notes
is 2 notes of 500.
Your Task:
You do not need to read input or print anything. Your task is to complete the function minPartition() which takes the value N as input parameter and returns a list of integers in decreasing order.
Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)
Constraints:
1 ≤ N ≤ 106",Not specified,Not specified,['Visa'],"['Dynamic Programming', 'Greedy', 'Algorithms']"
"[{'title': 'Accolite Interview Experience Set 6 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-6-on-campus/', 'content_summary': ""Round 1(Written): There was a technical online test in the first round. 20 questions were to be done in 30 minutes.Questions were basically from data structures, DBMS, operating systems. There was a negative marking of 0.5. After this, 10 students were shortlisted. Round 2(Technical) (2 hours): 1. Introduce yourself 2. Given a string, I had to construct tree from that string. Also I needed to write the code for it. 3. I was asked to construct the schema for the voting system of India, to put all the keys like primary key, foreign key etc. in the tables, to normalize the schema. All the 5 Normal forms should be fulfilled. Then I had to write query to display the political party who won the elections. After this round, 5 students were shorlisted. Round 3(technical) (2 hours): 1. Given a file of size 500MB which contains cgpa of students as a single stream without spaces and without any other separator. I had to tell them the logic to separate the different cgpa's. Also, I needed to tell them which data structure should be used to store the cgpa's efficiently. 2. Given a link list I had to tell whether it contains a cycle or not. If there was a cycle then which nodes were orphan nodes (i.e. the nodes which were not in the cycle ). 3. Given an array of positive numbers, I had to tell them whether the square root of the array element exist in the same array or not. If it exists then display that number. 4. Given an array containing denominations (i.e. the value of different coins) and the total sum. I had to find the minimum number of coins needed to make that sum. After this round 2 students were shortlisted. Round 4 (HR interview ) (30-45 mins): 1. Introduce yourself 2. What are your strengths and weaknesses? 3. What do you want to become in future? 4. A situation was given to me like if I was selected and I had to work late at night on some project whose deadline was approaching. Then what will be my reaction? 5. Asked me about my interests and hobbies.\nRelated Practice Problems\nNumber of Coins\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 6 (On-Campus)""}]",https://www.geeksforgeeks.org/problems/number-of-coins1824/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:39:46.199918,GeeksforGeeks,Coin Change (Minimum Coins),Medium,26.74%,258K+,Not available,"You are given an array coins[], where each element represents a coin of a different denomination, and a target value sum. You have an unlimited supply of each coin type {coins1, coins2, ..., coinsm}.
Your task is to determine the minimum number of coins needed to obtain the target sum. If it is not possible to form the sum using the given coins, return -1.
Examples:
Input: coins[] = [25, 10, 5], sum = 30
Output: 2
Explanation: Minimum 2 coins needed, 25 and 5
Input: coins[] = [9, 6, 5, 1], sum = 19
Output: 3
Explanation: 19 = 9 + 9 + 1
Input: coins[] = [5, 1], sum = 0
Output: 0
Explanation: For 0 sum, we do not need a coin
Input: coins[] = [4, 6, 2], sum = 5
Output: -1
Explanation: Not possible to make the given sum.
Constraints:
1 ≤ sum * coins.size() ≤ 106
0 <= sum <= 104
1 <= coins[i] <= 104
1 <= coins.size() <= 103",O(coins.size * sum),O(sum),"['Paytm', 'Morgan Stanley', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'Snapdeal', 'Oracle', 'Visa', 'Google', 'Synopsys']","['Dynamic Programming', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/does-robot-moves-circular0414/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:40:00.236638,GeeksforGeeks,Does robot moves circular,Easy,48.1%,10K+,Not available,"Given a sequence of moves for a robot. Check if the sequence is circular or not.
A sequence of moves is circular if the first and last positions of the robot are the same. A move can be one of the following :
G - Go one unit
L - Turn left
R - Turn right
Example 1:
Input: path = ""GLGLGLG""
Output: ""Circular""
Explanation: If we start form
(0,0) in a plane then we will
back to (0,0) by the end of the
sequence.
â€‹Example 2:
Input: path = ""GGGGL""
Output: ""Not Circular""
Explanation: We can't return to
same place at the end of the path.
Your Task:
You don't need to read input or print anything. Your task is to complete the function isCircular() which takes the string path as input and returns ""Circular"" if the path is circular else returns ""Not Circular"".
Expected Time Complexity: O(|S|)
Expected Auxiliary Space: O(1)
Constraints:
1 ≤ |S| ≤ 105",Not specified,Not specified,"['Amazon', 'Visa']","['Strings', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 4 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-4-on-campus/', 'content_summary': ""Round 1 (Written) \nAround 140 students appeared for the offline test. \n\n\nThere were 20 MCQs that to be done in (30 minutes), questions were from OS,DBMS,Datastructures. \nAfter that coding round was there (paper coding) in which 3 questions were given and we have to attempt any 2 (1 hour) \n\n1. Write your own sqrt() function. the function should return square root if it is a perfect square else return floor(sqrt(x)) \n2. Given an array containing positive and negative integers. you have to find the smallest missing positive number. your code should run in O(n) time and O(1) space. \n3. Given an array of strings, find whether the strings can be chained or not to form a circle. A string x can be put before another string y if last character of x is same as first character of y. \n\nAfter round-1 , 19 people were shortlisted for the interviews. \n\n\n\n\nRound 2 (Technical) (1:30 hr) \n1. Tell me about yourself. Meanwhile he(interviewer) looked into my CV and asked about my projects. \nI have done 3 projects so he started discussion CUDA and parallel programming and how you implemented over images to detect edges and how much gain factor achieved. \nsecondly,I have made an project on online voting system so he asked me to draw E-R diagram, schemas and the relationship between them and their functionalities.About (25-30) minutes discussion. \n\n2. Given a BST, you have to find the kth smallest element in it in O(n) time and O(1) space. \n\n3. Suppose you have server where multiple requests are coming at time to,t1,t2...Now suppose a user hits at any particular time t on the server then server should return the last request. you have to design the datastructure for the same. \nI suggested that we can use stack that will return the last request, he then asked me to do for last 10 requests then I suggested to use array of structures which will store request no. and timestamp along with them.Now at any time t we can move 10 elements back but he said that suppose user hits frequently then every time i will have to traverse back again and again so time complexity will be much high, I agreed and suggested another solution similar to LRU implementation so that the requests which are coming frequently can be processed faster. then he modified question that user wants requests of last 1 minute and he gave a hint that is it necessary to store all requests can we not just store requests of every 1 min only,then suddenly it clicked to me, I suggested to use deque for 60 secs now suppose request arrives at 61st sec then we can just add that at rear and remove one from front maintaining a window of 60 seconds.He was satisfied but he want that no deletion should be there so I told him to use circular deque so that we can replace previous elements.He was completely satisfied now with the approach.(About 35 min. discussion) \n\n4. Given an array containing prices of a share of 30 days.A person has 1 share which he can buy and sell any number of times, you have to find the maximum profit which can be earned. \nI suggested one approach to create two auxiliary array MIN from left and MAX from right and traverse both simultaneously if difference between MAX[i] and MIN[i] is greater than maxDiff then update maxDIff and store current index and add to sum if index+1 is not equal to current iteration index and finally return sum.He tried some test cases over my code and found that for some cases it was giving wrong answer,then he asked me that how is my command over dynamic programming,I told I know only the standard ones and no other experience,then he said this question is of DP but he was happy to see my approach.(About 20-25 min.) \n\n\n\n\nRound 3 (Technical) (1:30 hr) \n1. She(interviewer) asked me if I attempted 3rd question in written test, I said I attempted only 1st and 2nd, then she gave me paper and told to implement the 3rd question. \nI suggested an approach to use two arrays of structures(for first characters and last characters) which will contain boolean value to mark presence of character in string and also its index. Now compare two arrays and see that if both arrays have same boolean value and different indices for all first and last characters. If so then strings can form a chain else not.She was in doubt for my solution so she found a testcase where my code was giving wrong answer,so she told me to look for another solution,I came up with another approach and told her that we can make a directed graph from first and last characters and then traverse it in DFS, now suppose if the visited node is visited again and count of total visited nodes is same as total nodes then we can say that strings will form a chain, now she was satisfied with approach and asked me to write code, now as my graph was weak i was in shock,so she said to just write the pseudocode. \n\n2. Given a BST, you have to find the kth largest element in it in O(n) time and O(1) space. \nI suggested to declare a static variable count which will increment count if node visited in inorder and if count becomes k, I will print that node's data and return. Then she asked me how static works and difference between global and static. \n\n3. Given a mobile keypad of say nokia phone and a dictionary which has all the meaningful words which can be formed, suppose now user types some number(input) then your program must suggest all the meaningful words which are present in dictionary.Before implementing this she asked me the datastructure to store the dictionary efficiently and then how will you use this datastructure to make code. \nAt first, I suggested I will store dictionary in 2-D array and lexicograpphically sort it, now suppose user types a number the string starting with that character is searched in the array. she said to reduce complexity because dictionary may contain 1000s of words,then I suggested to use trie datastructure to store and search the string, she was satisfied now and asked me to explain the concept. \n4.Given preorder and postorder of a graph, how can you construct the graph. \nAs I heard this question, i was stuck for 2 minutes but then I said as far as graph is concerned I dont know about it but a unique tree cannot be constructed with preorder and postorder so as graph,so inorder is needed, she was happy and agreed on answer. \n\n\n\n\nRound 4 (Technical) (2:30 hr) \n1. Suppose a linked list is given and there is a loop, you have to find orphan nodes in O(n) time. orphan nodes are the nodes outside the loop. \n\n2. Design a BRTS traffic signalling system such that no two vehicle clashes. Note that BRTS bus will follow the BRTS traffic lights B1,B2,B3,B4 in 4 directions and regular traffic will follow regular traffic lights R1,R2,R3,R4 only. In input only maximum cycle time was given(time after which the process repeates) check for all corner cases (traffic lights have two states only (RED and GREEN)).you have to tell any one possible combination of traffic lights under maximum cycle time. (About 1hr discussion). \n\n3. Suppose a linked list is given but we dont know the count of nodes, you have to find the kth node from last without counting the nodes. \n4. Given an array of n integers such some elements are in the range 0 to n-1 and some out of range may be negative.You have to rearrange array such that all elements which are in range appear on their index and rest appear in sorted manner for indexes not present.This should be done in O(n) time and O(1) space. \nEg- suppose n=6 ,4 5 2 3 6 -3 output= -3,6,2,3,4,5 \n\n5. How can you implement stack using queue/queues. \n6. How can you sort the elements with the help of queue. \nI suggested one O(n) time solution along with O(n) extra space.He asked to do in O(1) space so I suggested deque, he seemed satisfied. \n\nonly 4 were selected till this round (I was one of them) \n\nRound 5 (Bar Raiser) (30 minutes) \n\n1. find the length of longest palindrome in a string starting from index 0. \n2. find if a string A is present in string B or not. \n3. find the length of longest prefix in a string \n\nAfter this 2 were selected finally and unfortunately I was not amongst them as they might have thought i was little stress out. At last I would suggest that your approach and concepts must be strong as they always give questions with some variations. \n\nRelated Practice ProblemsSmallest Positive missing numberCount SquaresCircle of stringsCheck for subsequenceStock buy and sellLongest Palindrome in a String\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 4 (On-Campus)""}]",https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string3411/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:40:11.445616,GeeksforGeeks,Longest Palindrome in a String,Medium,23.2%,332K+,Not available,"Given a string s, your task is to find the longest palindromic substring within s.
A substring is a contiguous sequence of characters within a string, defined as s[i...j] where 0 ≤ i ≤ j < len(s).
A palindrome is a string that reads the same forward and backward. More formally, s is a palindrome if reverse(s) == s.
Note: If there are multiple palindromic substrings with the same length, return the first occurrence of the longest palindromic substring from left to right.
Examples :
Input: s = “forgeeksskeegfor”
Output: “geeksskeeg”
Explanation: There are several possible palindromic substrings like “kssk”, “ss”, “eeksskee” etc. But the substring “geeksskeeg” is the longest among all.
Input: s = “Geeks”
Output: “ee”
Explanation: ""ee"" is the longest palindromic substring of ""Geeks"".
Input: s = “abc”
Output: “a”
Explanation: ""a"", ""b"" and ""c"" are longest palindromic substrings of same length. So, the first occurrence is returned.
Constraints:
1 ≤ s.size() ≤ 103
s consist of only lowercase English letters.",O(n^2),O(1),"['Zoho', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'MakeMyTrip', 'Visa', 'Walmart', 'Google', 'Qualcomm', 'Groupon']","['Strings', 'Dynamic Programming', 'palindrome', 'Data Structures', 'Algorithms']"
"[{'title': 'Flipkart Interview Experience Set 28 For Sde2', 'url': 'https://www.geeksforgeeks.org/flipkart-interview-experience-set-28-for-sde2/', 'content_summary': 'Round1: Machine coding and discussion based on that. Was asked to design and code snake and ladder game. Then questions where asked on how it can be extended. Round 2: puzzles and data structures Question 1: you are given a 1d array. The values represent the height of wall from floor. We are supposed to find what will be the amount of water it can hold. For ex.. Array(1,0,3) can hold 1 unit of water. Array(3,1,3) can hold 2 units of water. I did not give correct solution here. Can anyone suggest me the correct solution here... Question 2: We have a huge log file for meeting times in an office. Each entry has only start and end time. Given this we have to find the time which has the most number of meetings. He basically expected me to sort it and find the conflicting entries. I was rejected in this round. But all interviewers were down to earth. It was a nice experience. All the best for others.\nAll Practice Problems for Flipkart !\n\nComment\nMore info\nAdvertise with us\nNext Article\nFlipkart Interview Experience | Set 28 (For SDE2)'}]",https://www.geeksforgeeks.org/problems/maximum-intervals-overlap5708/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:40:46.349787,GeeksforGeeks,Maximum Intervals Overlap,Medium,48.73%,22K+,Not available,"Consider a big party where N guests came to it and a log register for guest’s entry and exit times was maintained. Find the minimum time at which there were maximum guests at the party. Note that entries in the register are not in any order.
Note: Guests are leaving after the exit times.
Example 1:
Input:
N = 5
Entry= {1, 2,10, 5, 5}
Exit = {4, 5, 12, 9, 12}
Output: 3 5
Explanation: At time 5 there were
guest number 2, 4 and 5 present.
Example 2:
Input:
N = 7
Entry= {13, 28, 29, 14, 40, 17, 3}
Exit = {107, 95, 111, 105, 70, 127, 74}
Output: 7 40
Explanation: At time 40 there were
all 7 guests present in the party.
Your Task:
You don't need to read input or print anything. Your task is to complete the function findMaxGuests() which takes 3 arguments(Entry array, Exit array, N) and returns the maximum number of guests present at a particular time and that time as a pair.
Expected Time Complexity: O(N*Log(N) ).
Expected Auxiliary Space: O(1).
Constraints:
1 <= N <= 105
1 <= Entry[i],Exit[i] <= 105",Not specified,Not specified,"['Flipkart', 'Accolite', 'Amazon', 'Visa', 'Directi']","['Sorting', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/find-pair-given-difference1559/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:41:22.809351,GeeksforGeeks,Find Pair Given Difference,Easy,27.25%,273K+,15m,"Given an array, arr[] and an integer x, return true if there exists a pair of elements in the array whose absolute difference is x, otherwise, return false.
Examples:
Input: arr[] = [5, 20, 3, 2, 5, 80], x = 78
Output: true
Explanation: Pair (2, 80) have an absolute difference of 78.
Input: arr[] = [90, 70, 20, 80, 50], x = 45
Output: false
Explanation: There is no pair with absolute difference of 45.
Input: arr[] = [1], x = 1
Output: false
Constraints:
1<= arr.size() <=106
1<= arr[i] <=106
0<= x <=105",O(n log n),O(1),"['Amazon', 'Visa']","['Sorting', 'Binary Search', 'Algorithms']"
"[{'title': 'Accolite Interview Experience Set 16 Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-16-campus/', 'content_summary': 'Round 1 (APTITUDE) :\n20 mcqs in 30 minutes of time\n-0.25 negative marking\nQuestions were from core computer science subjects and one blood relation problem in general section\nThe cut was 10/20\nAround 700 people attended they selected 20 Round 2 (WRITTEN CODING) :\n3 written coding questions(one was Left view of a tree) to be solved in one hour of time and i solved two and i was selected for the next round\nIn this round out of 20 they selected 10.\nRound 3 (TECHNICAL HR-1) :\nI was asked 8 Queens problem\nGiven an array find two non repeating elements in linear time complexity and no extra space\nRound 4 (TECHNICAL HR-2):\nBasic questions from my resume and projects.\nSearch in a row wise and column wise sorted matrix\nOne design question.\nRound 5 (Technical HR-3):\nThe Stock Span Problem\nFirst i came up with the naive solution and then came up with the idea of using stack.\nIn each round the coding that you wrote in the previous rounds will always get passed through and will be analyzed at each rounds.\nRound 6 (General HR):\nBasic questions on my resume\nPreferred work places\nWhat do you expect in Accolite?\nWhy Accolite?\nHobbies\nStrengths and Weaknesses\nFinally I was the only one who got selected. Note:\nGeeksforgeeks was very helpful and more than enough.Therefore practice hard in GeeksforGeeks\nPractice paper coding because we will get a lot of mistakes while writing the code on paper.\nThere requires a slight amount of luck on that day of interview so please work very hard to mitigate that factor of luck\nRelated Practice Problems\nStock span problem\nN-Queen Problem\nSearch in a matrix\nFinding the numbers\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 16 (On-Campus)'}, {'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}, {'title': 'Adobe Interview Experience For Internship', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-for-internship/', 'content_summary': ""Round 1: Round one was an online test with 4 sections, each section was timed and you cannot switch between the sections. The sections can be attempted in a specific order only:\nSection 1: Cognitive assessment – 20 MCQs, 20 mins. The questions were related to logical reasoning and basic math.\nSection 2: Technical assessment – 20 MCQs, 20 mins. The questions were related to basic computers' knowledge like DSA, OS, DBMS, Syntax checking.\nSection 3: Coding assessment – 2 questions:\nNumber with the maximum occurrence of digit K. An array of numbers was given and a single number k was given, the number which has the maximum occurrence of k should be printed. Ex:\narray: {22, 32, 242, 277, 222}, k=2, \noutput:222\nWildcard matching – Similar question.\nSection 4: Gamified assessment – These were like the memory-based games and had 3-4 levels per game.\nRound 2: This was a telephonic round held on BlueJeans which lasted for approximately one hour, the interviewer greeted me and told me to tell me about myself, I gave a brief introduction about my education and a little about my family and my hobbies. Then he asked me the average time I spend on coding on a daily basis and my language of preference.\nThen he gave me a coding question to code on the spot while sharing my screen and explaining what am I doing. The question was similar to this question.\nI gave a basic solution to which he asked the time complexity and asked me to optimize it. PRACTICE OPTIMIZED CODING as it will help everywhere as optimized codes are appreciated everywhere.  We had a good discussion as to what should I approach, how will it help the time complexity, and everything else going on in my mind.\nHe asked me if I knew about paging, but I remembered it vaguely and I said it straightforward that I don’t remember, as it is no use beating around the bush that just irritates the interviewer. Then he asked me the difference between a 32-bit OS and a 64-bit OS and how much GB RAM can each hold(Ans: 2^(32 or 64)bits memory). He then asked me what was my favourite subject to which I answered Cryptography, and he asked me questions from it. Questions were related to Asymmetric key cryptography and the difference between symmetric and asymmetric.  \nThe whole idea of the interview was to see my approach rather than my coding skill, but a good knowledge of the basics of the core CS subjects, as well as algorithms, is a must. Proficiency in coding is appreciated, but not very necessary as your communication, approach and logic are what matters.\n\nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience for Internship""}, {'title': 'Adobe Interview Experience For Mts 1 2', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-for-mts-1-2/', 'content_summary': 'First, there was an online round on cocubes of 1 hr 30 min. 1hr was for aptitude which consisted of 60 questions(mental ability, comprehensive, reasoning) and next 30 min was for 2 coding questions that were very basic. Accuracy required in aptitude as coding questions were done by all and aptitude made all the difference. Candidates shortlisted were called for interview in their office. Round 1: \nFirst, he asked me to brief about yourself and there was a long discussion about my projects and their applications. As I mentioned the github link for all the projects, he visited my profile and checked my repositories and asked about github and the tools I have used.\nDetect the loop in the linked list and then find the point from where the loop started. he then asked to write the code. https://www.geeksforgeeks.org/problems/detect-loop-in-linked-list/1\nSearch in row-wise and column wise sorted matrix. https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1  he emptied some cells in the matrix and asked how to insert the number in the matrix. only logic was required.\nWhat are threads and processes? Can two threads in a process communicate? Is communication possible between two threads of two different processes? https://www.geeksforgeeks.org/inter-thread-communication-java/   https://www.geeksforgeeks.org/inter-process-communication/\nRound 2:\nFirst the small introduction and then he asked to rate my favorite(java) programming language.\nAgain the same question of the linked list was asked in the 2nd round but this time he asked me to prove my solution. Proof of solution of slow and fast pointer concept to find the meeting point was asked. He wants me to answer that the point where slow and fast pointer meets is the midpoint of the whole linked list. https://www.geeksforgeeks.org/problems/detect-loop-in-linked-list/1\nFind the nth node from the end of a linked list and write the code. https://www.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1\nPostorder traversal of a tree and code it.\nDifference between mutex and semaphore. Difference between the mutex and binary semaphore.\nAt last, a long discussion of about 45min on the implementation of hashmap was held. He made a class where hashcode method and equals method of object class was overridden. the object of the class was the key and many values were put in the hashmap and the output was asked along with the size of an array used in a hashmap and then their time complexity. He changed the implementation of the above 2 methods 4 times and then asked the same questions. For Ex, if hashcode return 1 and equals method return true always then every time value is overwritten and size of an array is 1 and complexity is O(1) as the complexity of hashcode and equals method is O(1).\nThen again discussion continued on hashmap. Given a class of city which contains all the malls in it and a class of mall which contains cities in which it is present. what should be done to make both city and mall to act as a key of the hashmap. Here runtime polymorphism was used where a base class was made with equals and hashcode method which is inherited by both city and mall class. https://www.geeksforgeeks.org/internal-working-of-hashmap-java/\nRound 3:\nhttps://www.geeksforgeeks.org/problems/rotate-by-90-degree-1587115621/1\nif you have a directory of many files then how will you find the duplicate files or which data structure is best for performing that search of duplicate files. Ans: hashmap. this technique is used by WhatsApp to remove all the duplicate messages like forwarded messages.\nHe scanned my resume and asked me to detail about my all the projects and many questions were asked related to it. All the technical problems faced etc.\nAs I was the vice-captain of volleyball so he asked about the duties of a captain. Is it possible to have a captain and a vice-captain not in playing six?\nRound 4 (HR): General discussion. The evaluation was not done in this round. Asked me about good and bad of adobe. He explained everything about Adobe its culture its spread its new technologies. My Feedback from previous interviewers was discussed. Finally, I got the offer. Thank you, Geeks For Geeks for providing study material.It helped a lot.\n\nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (For MTS-1)'}]",https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:41:54.982371,GeeksforGeeks,Search in a Row-Column sorted matrix,Easy,41.62%,178K+,15m,"Given a 2D integer matrix mat[][] of size n x m, where every row and column is sorted in increasing order and a number x, the task is to find whether element x is present in the matrix.
Examples:
Input: mat[][] = [[3, 30, 38],[20, 52, 54],[35, 60, 69]], x = 62
Output: false
Explanation: 62 is not present in the matrix, so output is false.
Input: mat[][] = [[18, 21, 27],[38, 55, 67]], x = 55
Output: true
Explanation: 55 is present in the matrix.
Input: mat[][] = [[1, 2, 3],[4, 5, 6],[7, 8, 9]], x = 3
Output: true
Explanation: 3 is present in the matrix.
Constraints:
1 <= n, m <=1000
1 <= mat[i][j] <= 109
1<= x <= 109",O(n + m),O(1),"['Paytm', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'MakeMyTrip', 'Ola Cabs', 'Oracle', 'Visa', 'Goldman Sachs', 'Directi', 'Adobe', 'SAP Labs', 'Groupon', 'InMobi', 'One97', 'Polycom', 'TinyOwl']","['Searching', 'Matrix', 'Data Structures', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/buy-stock-2/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:42:16.896717,GeeksforGeeks,Stock Buy and Sell – Max one Transaction Allowed,Easy,49.33%,92K+,10m,"Given an array prices[] of length n, representing the prices of the stocks on different days. The task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. Here one transaction means 1 buy + 1 Sell. If it is not possible to make a profit then return 0.
Note: Stock must be bought before being sold.
Examples:
Input: prices[] = [7, 10, 1, 3, 6, 9, 2]
Output: 8
Explanation: You can buy the stock on day 2 at price = 1 and sell it on day 5 at price = 9. Hence, the profit is 8.
Input: prices[] = [7, 6, 4, 3, 1]
Output: 0
Explanation: Here the prices are in decreasing order, hence if we buy any day then we cannot sell it at a greater price. Hence, the answer is 0.
Input: prices[] = [1, 3, 6, 9, 11]
Output: 10
Explanation: Since the array is sorted in increasing order, we can make maximum profit by buying at price[0] and selling at price[n-1].
Constraint:
1 <= prices.size()<= 105
0 <= prices[i] <=104",O(n),O(1),"['Bloomberg', 'Facebook', 'Intel', 'Infosys', 'Zoho', 'Morgan Stanley', 'Amazon', 'Microsoft', 'Samsung', 'Yahoo', 'PayPal', 'Nvidia', 'Oracle', 'Visa', 'Walmart', 'Goldman Sachs', 'TCS', 'Adobe', 'Google', 'IBM', 'Accenture', 'Apple', 'Uber']","['Greedy', 'Arrays']"
"[{'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}]",https://www.geeksforgeeks.org/problems/flattening-a-linked-list--170645/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:42:28.296405,GeeksforGeeks,Flattening a Linked List,Medium,50.24%,22K+,Not available,"Given a Linked List of size N, where every node represents a sub-linked-list and contains two pointers:
(i) a next pointer to the next node,
(ii) a bottom pointer to a linked list where this node is head.
Each of the sub-linked-list is in sorted order.
Flatten the Link List such that all the nodes appear in a single level while maintaining the sorted order.
Note: The flattened list will be printed using the bottom pointer instead of next pointer.
Example 1:
Input:
5 -> 10 -> 19 -> 28
| | | |
7 20 22 35
| | |
8 50 40
| |
30 45
Output:  5-> 7-> 8- > 10 -> 19-> 20->
22-> 28-> 30-> 35-> 40-> 45-> 50.
Explanation:
The resultant linked lists has every
node in a single level.
(Note: | represents the bottom pointer.)
Example 2:
Input:
5 -> 10 -> 19 -> 28
| |
7 22
| |
8 50
|
30
Output: 5->7->8->10->19->22->28->30->50
Explanation:
The resultant linked lists has every
node in a single level.
(Note: | represents the bottom pointer.)
Your Task:
You do not need to read input or print anything. Complete the function flatten() that takes the head of the linked list as input parameter and returns the head of flattened link list.
Expected Time Complexity: O(N*M)
Expected Auxiliary Space: O(1)
Constraints:
0 <= N <= 50
1 <= Mi <= 20
1 <= Element of linked list <= 103",Not specified,Not specified,"['Paytm', 'Flipkart', 'Amazon', 'Microsoft', 'Snapdeal', '24*7 Innovation Labs', 'Payu', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Drishti-Soft']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/remove-duplicate-element-from-sorted-linked-list/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:42:41.823152,GeeksforGeeks,Remove Duplicates from a Sorted Linked List,Easy,49.37%,313K+,20m,"Given a singly linked list. The task is to remove duplicates (nodes with duplicate values) from the given list (if it exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.
Examples:
Input:
LinkedList: 2->2->4->5
Output: 2 -> 4 -> 5
Explanation: In the given linked list 2 -> 2 -> 4 -> 5, only 2 occurs more than 1 time. So we need to remove it once.
Input:
LinkedList: 2->2->2->2->2
Output: 2
Explanation: In the given linked list 2 -> 2 -> 2 -> 2, 2 is the only element and is repeated 5 times. So we need to remove any four 2.
Expected Time Complexity : O(n)
Expected Space Complexity: O(1)
Constraints:
1 <= Number of nodes, data of nodes <= 105",Not specified,Not specified,"['Microsoft', 'OYO Rooms', 'Oracle', 'Visa', 'Adobe', 'Myntra']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/delete-without-head-pointer/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:42:52.783238,GeeksforGeeks,Delete without head pointer,Easy,78.57%,214K+,Not available,"You are given a node del_node of a Singly Linked List where you have to delete a value of the given node from the linked list but you are not given the head of the list.
By deleting the node value, we do not mean removing it from memory. We mean:
The value of the given node should not exist in the linked list.
The number of nodes in the linked list should decrease by one.
All the values before & after the del_node node should be in the same order.
Note:
Multiple nodes can have the same values as the del_node, but you must only remove the node whose pointer del_node is given to you.
It is guaranteed that there exists a node with a value equal to the del_node value and it will not be the last node of the linked list.
Examples:
Input: Linked List = 1 -> 2, del_node = 1
Output: 2
Explanation: After deleting 1 from the linked list, we have remaining nodes as 2.
Input: Linked List = 10 -> 20 -> 4 -> 30, del_node = 20
Output: 10->4->30
Explanation: After deleting 20 from the linked list, we have remaining nodes as 10, 4, 30.
Constraints:
2 <= number of nodes <= 106
1 <= node->data <= 106",O(1),O(1),"['Amazon', 'Microsoft', 'Samsung', 'Visa', 'Goldman Sachs', 'Kritikal Solutions']","['Linked List', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 10 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-10-on-campus/', 'content_summary': ""Accolite Software visited our campus. Firstly, they presented a pre-placement-talk where they talked about their work culture, their biggest clients, their intra, fests, etc. The work life aspect was discussed too. \n\nFollowing this, they conducted Online test for 30 min that included MCQ questions from \nC, C++ : finding o/p, complexity, bugs if any \nDBMS: Join queries, indexing and theory \nOS and Networks: Basic theory Networking \nand Little Quantitative Aptitude. \nAround 200 Students appeared for this round. 11 were shortlisted for first round interviews. I got through this round. For the next top 10, a coding round of pen/paper (1 hour) was carried out from where only 2 were shortlisted. There were three questions as narrated by my friends. One on tries, one on heap, one on sorting. Thus, 13 people made it for technical interviews. \n\nRound 1 FFS : 1 hour \nThe two interviewers congratulated me for reaching this far. \n\n1) After a little introduction, they threw me a puzzle. 3 _ 1 _ 3 _ 6 = 8. I had to fill the spaces with any operator I can, to satisfy the equality. I thought for about 5 mins. Then I gave the following: (3 ^ 1) & 3 + 6. They were happy with the not so conventional approach but directed me towards a simpler construction. See if you can find it yourself \n\n2) Then followed a barrage of sql queries, probably as I had mentioned databases in my resume. I suggest everyone to practice join queries. \n\n3) Next question was to detect the merging point of two linked lists with length m and n. I initially gave the hashmap solution which he asked me to code. Then he asked for other less expensive ways. I reduced problem into finding the start node of a loop, if modification was allowed, otherwise, advancing the longer by the difference between the two lengths. Full working code was required along with the time and space complexities. \n\n4) Another question was to find a triplet in the array that sums to a particular value. \nAfter this, I was notified to get ready for round 2. Five folks were eliminated. \n\nRound 2 FFS: 2 hours \n1) Given a huge array consisting of integers in a certain range. How would you solve the queries of the following type : Report the number of integers lying in the range between l to r. I built a prefix array as in the counting sort. Now all queries could be answered in O(1). He modified the question by stating that the range now was always a multiple of some number. I proceeded by dividing the i/p into buckets and then building the prefix array. Full code was asked. \n\n2) Given a huge numbers of strings in an arraylist, report the longest common prefix of the strings. I solved this by creating a trie with an augmented node storing depth and count at each node. Only the important modules were asked to be coded. \n\n3) Short discussion of my summer internship, why I used JAVA, what challenges did I face. He asked me to explain the differences between treeMap, linkedHashMap and hashMap. \n\n4) I had mentioned a project carried out on Linux Mint. He asked me the basic commands of linux, namely cat, grep, ps, df along with syntax for git commands. \n\n5) Assume a traveller wants to books a cab. Write an automated server that schedules a cab present in the region pool of the user in a way that maximizes the benefit to the company. You can make assumptions like GPS availability. At first, I had no clue where I was heading. Then I broke down the problem into structures and assumed the necessary. This was more of a discussion sort of thing, as this had no definitive answer. I had to write the pseudocode of anything I thought. 30 mins went straight into this question. \n\n6) Core JAVA Questions. 7-8 of them including but not limited to new operator, constructor, static blocks, synchronized keywords etc. \n3 were eliminated. I got through to round 3. \n\nRound 3: FFS 1:15 hours \nThe interviewer greeted and informed me of this round being a techno-managerial round. \n1) You are the manager of a restaurant. Given the archives of past purchases of raw materials per day of the week, write an algorithm that forecasts the amount of each raw material to be purchased so as to cover the next week requirements. Mention data structures used, if any. After thinking for a while, I proceeded by the method of weighted averages, assigned more weight to weekends over weekdays, special diets etc. I said, I being the manager would use the trend adjustment factor to forecast the next demand (economics helped Explained this using an example. \n\n2) Given an i/p stream of train coaches in the following format: XY where X: uppercase letter, Y: a number, what is the most efficient way to sort the coaches such that at the end of the stream, we can get the sorted order in O(1). eg. A3, B2, C10, A1 -> o/p A1, A3, B2, C10. \nAlso prove why comparison sorts have a lower bound of O(nlogn) where n is the size of the input. \n\n3) How do you delete an arbitrary item from a heap. Write the code. Even the redundant lines in my code were subjected to scrutiny. \nI wasn't confident of my performance in this round, but stayed positive. It had been 10 hours of waiting. \n\nHR Round(15 mins) \nThe HR Ma'am was very friendly. Asked me what I knew about the company so far. I had a feeling I was being tested for my listening skills against the morning pre-placement presentation. \n\nI would like to thanks geeksforgeeks for their content that helped me through. A word of advice: Practice pen and paper codes. Never lie on your resume, it may back-fire at any moment. Inner peace is a must Cheers! \n\n \n\n\nRelated Practice ProblemsIntersection Point in Y Shapped Linked ListsTriplet Sum in Array\n\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 10 (On-Campus)""}, {'title': 'Qualcomm Interview Experience Set 9 Experienced Linkedin Invite', 'url': 'https://www.geeksforgeeks.org/qualcomm-interview-experience-set-9-experienced-linkedin-invite/', 'content_summary': 'I have applied for Graphics Software Engineer position through LinkedIn. I was called for interview after 2 weeks of applying. Interview took place in Bangalore office. Round 1 (60 minute): 1. Explain BE project (Satellite image processing) 2. BFS and DFS (Example and code) 3. How to find loops in linked list? 4. Merge sort ad Quick sort (Code and timing complexity) 5. How pivot element in quick sort affects the timing complexity? 6. Binary search 7. Virtual function 8. Overloading vs Overriding 9. Find the intersection of two linked list (2 methods: brute force and nlogn complexity one) Round 2 (30 min): 1. Questions on internship experience (Computer Vision domain) 2. Multidimensional images 3. Masking operation 4. Edge detection 5. Face detection 6. General steps in image processing 7. Image segmentation techniques 8. How simulation model of any HW is designed? 9. How you compare outputs of HW model and equivalent SW model? Round 3 (30 min): 1. malloc vs calloc 2. Write a python script to find an occurrence of a word in file 3. What are timing complexity notations? 4. Create and insert function in Binary search tree (BST) 5. Access specifiers with example 6. 1 year job experience (SAP BI). Steps in SAP BI? 7. Puzzle: With minimum number of moves change given shape ito another shape (matchstick) 6. Puzzle: One man does the exact double amount of work than the previous day. It completed the total work in 15 days then how many days it require to completed 50% of work?\nAll Practice Problems for Qualcomm !\n\nComment\nMore info\nCampus Training Program\nNext Article\nQualcomm Interview Experience | Set 9 (Experienced through Linkedin Invite)'}, {'title': 'Makemytrip Interview Experience Set 4', 'url': 'https://www.geeksforgeeks.org/makemytrip-interview-experience-set-4/', 'content_summary': 'Round 1 : Written : Q1. Given a stream of around billion numbers in an array, which has approximately only 1000 unique numbers. Print the unique numbers. Complexity should be less than O(n). Eg: Input: 1,1,1,1,….2,2,2,…3,4,4,4,4……1111,1111,……….. Output : 1,2,3,4,1111 Q2: Write a program to print the frequency of all words in a given paragraph. Q3: Write a program to reverse the string word wise. Eg: I/P : “I am a boy” O/P: “boy a am I” Q4: Write a program to explain producer consumer program using threads. Q5: (Only theory) What data structures will you use to design a garbage collector. Round 2: F2F Q1: Given an array in which all numbers except two are repeated once. (i.e. we have 2n+2 numbers and n numbers are occurring twice and remaining two have occurred once). Find those two numbers in the most efficient way Q 2 : Given a linked list with next and arbitrary pointers, clone it. Q 3 : A lot of questions around Spring, Hibernate, REST, Dependency Injection, AOP etc. Q4 : Reverse a linked list in groups of n. Round 3: F2F Q1: Vertical level order traversal of a tree. Q2: Reverse the second half of the linked list in the most efficient way. Q3: Find the merging point of two linked list. Q4: Write a function to generate all possible n pairs of balanced parentheses. For example, if n=1{} for n=2 {}{} {{}} Q5 : Again a lot of drilling questions on Java, Spring, MVC, Singleton, Hibernate, REST. Round 4 : F2F (Manager/Architect) This round had questions more around various technology stacks, Design Patterns ( Interceptor, Singleton, Publisher Subscriber, MVC etc etc ) UI Templates REST Spring Java In memory database Log appenders Round 5: F2F ( H.R. ) Generic questions like why do you want to join Makemytrip. What are your career aspirations. How do you think it aligns with MMT. Thanks to geeksforgeeks for the awesome database of questions, that helped me clear the interview.\nAll Practice Problems for MakeMyTrip !\nRelated Practice Problems\nPrint a Binary Tree in Vertical Order\nIntersection Point in Y Shapped Linked Lists\nClone a linked list with next and random pointer\nReverse a Linked List in groups of given size.\nFinding the numbers\n\nComment\nMore info\nCampus Training Program\nNext Article\nMakeMyTrip Interview Experience | Set 4'}, {'title': 'Adobe Interview Experience 5 Rounds', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-5-rounds/', 'content_summary': 'Online Round(On Cocubes):- In this round there were an MCQ section(contained questions on aptitude and CS fundamentals) and a coding section( was pretty simple with just 3 basic level questions). \n\nTechnical Round 1:- ? (at Noida) \nDS Questions:- First question was to write a code of finding an intersection point in the merged linked lists, first I gave the stack based approach then optimized with the hashtable based approach. \nNext question was to find the pairs of numbers which make a given sum in the given array , only the approach was asked, so initially I gave loop based approach then optimized it with a hashing. Just then he asked me to find triplets which could make a sum as zero. \nThen third question was to find the minimum length section of an array which could be sorted to make the whole array as sorted , this was a little bit tricky, but the interviewer was helpful in giving couple of hints. \n\nCS Fundamentals:- \nI mentioned in my introduction that I am proficient in Java so he asked me some basic questions like difference between abstract class and interface and questions like what is inheritance how it is useful . There were also some questions on OS. \n\nTechnical Round 2:- \nHe asked me the working of google maps, what is the algorithm behind that and how would I implement it and if I need to find out the nearby clinics then what is the best way to do that. Then he asked me difference between BFS and DFS which one is better for the above functionality. Then he asked me a random question that GPS would work without internet or not. Then I was asked to code random number generating function which does not generates a pregenerated number twice. Then a couple of questions related to my projects. \nThen he asked OS questions, like what is Thrashing and how to prevent it, if you are rich then would you buy a 500 gb ram, if no why?( my ans-No, as Searching in ram then will become a costly operation) then there were questions on Paging, TLB, Virtual memory, Logical address etc. \n\nTechnical Round 3:- \nFirst he asked me about my projects(in detail this time), then he gave me a system design problem, to design a lift management system with multiple lifts and write the classes required tothe same, his main focus was on to find an algorithm to allocate lift so as to minimize the waiting time spent by a person.Firstly he asked me to find all the edge cases like if 2 lifts are equally far \nfrom a requesting floors then how will you allocate, so after a heavy discussion he asked me to write the code. \nThen some non-technical questions were asked like what would you change in your past in your education and why. \n\nHR Round:- \nIt was just a 10 min round.He asked general questions about the college placements then if I already had any offer and its details.Then I asked him that whether freshers are hired for purely research work in Adobe and if not then what is the procedure to get there. \n\nTips:- \nMake sure you brush up your CS fundamentals(especially OS and the language in which you are proficient ). They watch you throughout the day, even if you are sitting outside the interview hall, so be aware of that. It is ok not to answer all the questions correctly, you might go wrong with some but don’t let that demoralize or demotivate you as you need to be energetic till the end. \n\nAll the best!!\n \nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (5 Rounds)'}]",https://www.geeksforgeeks.org/problems/intersection-point-in-y-shaped-linked-lists--170645/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:43:03.857341,GeeksforGeeks,Intersection Point in Y Shaped Linked Lists,Medium,55.77%,29K+,Not available,"Given two singly linked lists, write a program to get the point where two linked lists intersect each other. If the linked list does not merge at any point, it should return -1.
Examples:
Input: LinkedList1: 3->6->9->common, LinkedList2: 10->common, common: 15->30->NULL
Output: 15
Explanation:
Input: LinkedList1: 4->1->common, LinkedList2: 5->6->1->common, common: 8->4->5->NULL
Output: 8
Explanation:
Expected Time Complexity: O(n+m)
Expected Space Complexity: O(n)
Constraints:
Length of Both LinkedList before the intersection(if any) is greater than 0.
1 ≤ no. of nodes in LinkedList1, LinkedList2 ≤ 105
-1000 ≤ node->data ≤ 1000
Challenge: Try to solve the problem without using any extra space.",Not specified,Not specified,"['VMWare', 'Flipkart', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'D-E-Shaw', 'FactSet', 'MakeMyTrip', 'Visa', 'Goldman Sachs', 'MAQ Software', 'Adobe', 'Qualcomm']","['Linked List', 'Data Structures']"
"[{'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}]",https://www.geeksforgeeks.org/problems/flattening-a-linked-list/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:43:25.141367,GeeksforGeeks,Flattening a Linked List,Medium,51.53%,185K+,40m,"Given a linked list containing n head nodes where every node in the linked list contains two pointers:
(i) next points to the next node in the list.
(ii) bottom pointer to a sub-linked list where the current node is the head.
Each of the sub-linked lists nodes and the head nodes are sorted in ascending order based on their data.
Your task is to flatten the linked list such that all the nodes appear in a single level while maintaining the sorted order.
Note:
1. ↓ represents the bottom pointer and -> represents the next pointer.
2. The flattened list will be printed using the bottom pointer instead of the next pointer.
Examples:
Input:
Output: 5-> 7-> 8-> 10 -> 19-> 20-> 22-> 28-> 30-> 35-> 40-> 45-> 50.
Explanation:
Bottom pointer of 5 is pointing to 7.
Bottom pointer of 7 is pointing to 8.
Bottom pointer of 8 is pointing to 10 and so on.
Input:
Output: 5-> 7-> 8-> 10-> 19-> 22-> 28-> 30-> 50
Explanation:
Bottom pointer of 5 is pointing to 7.
Bottom pointer of 7 is pointing to 8.
Bottom pointer of 8 is pointing to 10 and so on.
Constraints:
0 <= n <= 100
1 <= number of nodes in sub-linked list(mi) <= 50
1 <= node->data <= 104",O(n  *  n  *  m),O(n),"['Paytm', 'Flipkart', 'Amazon', 'Microsoft', 'Snapdeal', '24*7 Innovation Labs', 'Payu', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Drishti-Soft']","['Linked List', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 10 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-10-on-campus/', 'content_summary': ""Accolite Software visited our campus. Firstly, they presented a pre-placement-talk where they talked about their work culture, their biggest clients, their intra, fests, etc. The work life aspect was discussed too. \n\nFollowing this, they conducted Online test for 30 min that included MCQ questions from \nC, C++ : finding o/p, complexity, bugs if any \nDBMS: Join queries, indexing and theory \nOS and Networks: Basic theory Networking \nand Little Quantitative Aptitude. \nAround 200 Students appeared for this round. 11 were shortlisted for first round interviews. I got through this round. For the next top 10, a coding round of pen/paper (1 hour) was carried out from where only 2 were shortlisted. There were three questions as narrated by my friends. One on tries, one on heap, one on sorting. Thus, 13 people made it for technical interviews. \n\nRound 1 FFS : 1 hour \nThe two interviewers congratulated me for reaching this far. \n\n1) After a little introduction, they threw me a puzzle. 3 _ 1 _ 3 _ 6 = 8. I had to fill the spaces with any operator I can, to satisfy the equality. I thought for about 5 mins. Then I gave the following: (3 ^ 1) & 3 + 6. They were happy with the not so conventional approach but directed me towards a simpler construction. See if you can find it yourself \n\n2) Then followed a barrage of sql queries, probably as I had mentioned databases in my resume. I suggest everyone to practice join queries. \n\n3) Next question was to detect the merging point of two linked lists with length m and n. I initially gave the hashmap solution which he asked me to code. Then he asked for other less expensive ways. I reduced problem into finding the start node of a loop, if modification was allowed, otherwise, advancing the longer by the difference between the two lengths. Full working code was required along with the time and space complexities. \n\n4) Another question was to find a triplet in the array that sums to a particular value. \nAfter this, I was notified to get ready for round 2. Five folks were eliminated. \n\nRound 2 FFS: 2 hours \n1) Given a huge array consisting of integers in a certain range. How would you solve the queries of the following type : Report the number of integers lying in the range between l to r. I built a prefix array as in the counting sort. Now all queries could be answered in O(1). He modified the question by stating that the range now was always a multiple of some number. I proceeded by dividing the i/p into buckets and then building the prefix array. Full code was asked. \n\n2) Given a huge numbers of strings in an arraylist, report the longest common prefix of the strings. I solved this by creating a trie with an augmented node storing depth and count at each node. Only the important modules were asked to be coded. \n\n3) Short discussion of my summer internship, why I used JAVA, what challenges did I face. He asked me to explain the differences between treeMap, linkedHashMap and hashMap. \n\n4) I had mentioned a project carried out on Linux Mint. He asked me the basic commands of linux, namely cat, grep, ps, df along with syntax for git commands. \n\n5) Assume a traveller wants to books a cab. Write an automated server that schedules a cab present in the region pool of the user in a way that maximizes the benefit to the company. You can make assumptions like GPS availability. At first, I had no clue where I was heading. Then I broke down the problem into structures and assumed the necessary. This was more of a discussion sort of thing, as this had no definitive answer. I had to write the pseudocode of anything I thought. 30 mins went straight into this question. \n\n6) Core JAVA Questions. 7-8 of them including but not limited to new operator, constructor, static blocks, synchronized keywords etc. \n3 were eliminated. I got through to round 3. \n\nRound 3: FFS 1:15 hours \nThe interviewer greeted and informed me of this round being a techno-managerial round. \n1) You are the manager of a restaurant. Given the archives of past purchases of raw materials per day of the week, write an algorithm that forecasts the amount of each raw material to be purchased so as to cover the next week requirements. Mention data structures used, if any. After thinking for a while, I proceeded by the method of weighted averages, assigned more weight to weekends over weekdays, special diets etc. I said, I being the manager would use the trend adjustment factor to forecast the next demand (economics helped Explained this using an example. \n\n2) Given an i/p stream of train coaches in the following format: XY where X: uppercase letter, Y: a number, what is the most efficient way to sort the coaches such that at the end of the stream, we can get the sorted order in O(1). eg. A3, B2, C10, A1 -> o/p A1, A3, B2, C10. \nAlso prove why comparison sorts have a lower bound of O(nlogn) where n is the size of the input. \n\n3) How do you delete an arbitrary item from a heap. Write the code. Even the redundant lines in my code were subjected to scrutiny. \nI wasn't confident of my performance in this round, but stayed positive. It had been 10 hours of waiting. \n\nHR Round(15 mins) \nThe HR Ma'am was very friendly. Asked me what I knew about the company so far. I had a feeling I was being tested for my listening skills against the morning pre-placement presentation. \n\nI would like to thanks geeksforgeeks for their content that helped me through. A word of advice: Practice pen and paper codes. Never lie on your resume, it may back-fire at any moment. Inner peace is a must Cheers! \n\n \n\n\nRelated Practice ProblemsIntersection Point in Y Shapped Linked ListsTriplet Sum in Array\n\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 10 (On-Campus)""}, {'title': 'Qualcomm Interview Experience Set 9 Experienced Linkedin Invite', 'url': 'https://www.geeksforgeeks.org/qualcomm-interview-experience-set-9-experienced-linkedin-invite/', 'content_summary': 'I have applied for Graphics Software Engineer position through LinkedIn. I was called for interview after 2 weeks of applying. Interview took place in Bangalore office. Round 1 (60 minute): 1. Explain BE project (Satellite image processing) 2. BFS and DFS (Example and code) 3. How to find loops in linked list? 4. Merge sort ad Quick sort (Code and timing complexity) 5. How pivot element in quick sort affects the timing complexity? 6. Binary search 7. Virtual function 8. Overloading vs Overriding 9. Find the intersection of two linked list (2 methods: brute force and nlogn complexity one) Round 2 (30 min): 1. Questions on internship experience (Computer Vision domain) 2. Multidimensional images 3. Masking operation 4. Edge detection 5. Face detection 6. General steps in image processing 7. Image segmentation techniques 8. How simulation model of any HW is designed? 9. How you compare outputs of HW model and equivalent SW model? Round 3 (30 min): 1. malloc vs calloc 2. Write a python script to find an occurrence of a word in file 3. What are timing complexity notations? 4. Create and insert function in Binary search tree (BST) 5. Access specifiers with example 6. 1 year job experience (SAP BI). Steps in SAP BI? 7. Puzzle: With minimum number of moves change given shape ito another shape (matchstick) 6. Puzzle: One man does the exact double amount of work than the previous day. It completed the total work in 15 days then how many days it require to completed 50% of work?\nAll Practice Problems for Qualcomm !\n\nComment\nMore info\nCampus Training Program\nNext Article\nQualcomm Interview Experience | Set 9 (Experienced through Linkedin Invite)'}, {'title': 'Makemytrip Interview Experience Set 4', 'url': 'https://www.geeksforgeeks.org/makemytrip-interview-experience-set-4/', 'content_summary': 'Round 1 : Written : Q1. Given a stream of around billion numbers in an array, which has approximately only 1000 unique numbers. Print the unique numbers. Complexity should be less than O(n). Eg: Input: 1,1,1,1,….2,2,2,…3,4,4,4,4……1111,1111,……….. Output : 1,2,3,4,1111 Q2: Write a program to print the frequency of all words in a given paragraph. Q3: Write a program to reverse the string word wise. Eg: I/P : “I am a boy” O/P: “boy a am I” Q4: Write a program to explain producer consumer program using threads. Q5: (Only theory) What data structures will you use to design a garbage collector. Round 2: F2F Q1: Given an array in which all numbers except two are repeated once. (i.e. we have 2n+2 numbers and n numbers are occurring twice and remaining two have occurred once). Find those two numbers in the most efficient way Q 2 : Given a linked list with next and arbitrary pointers, clone it. Q 3 : A lot of questions around Spring, Hibernate, REST, Dependency Injection, AOP etc. Q4 : Reverse a linked list in groups of n. Round 3: F2F Q1: Vertical level order traversal of a tree. Q2: Reverse the second half of the linked list in the most efficient way. Q3: Find the merging point of two linked list. Q4: Write a function to generate all possible n pairs of balanced parentheses. For example, if n=1{} for n=2 {}{} {{}} Q5 : Again a lot of drilling questions on Java, Spring, MVC, Singleton, Hibernate, REST. Round 4 : F2F (Manager/Architect) This round had questions more around various technology stacks, Design Patterns ( Interceptor, Singleton, Publisher Subscriber, MVC etc etc ) UI Templates REST Spring Java In memory database Log appenders Round 5: F2F ( H.R. ) Generic questions like why do you want to join Makemytrip. What are your career aspirations. How do you think it aligns with MMT. Thanks to geeksforgeeks for the awesome database of questions, that helped me clear the interview.\nAll Practice Problems for MakeMyTrip !\nRelated Practice Problems\nPrint a Binary Tree in Vertical Order\nIntersection Point in Y Shapped Linked Lists\nClone a linked list with next and random pointer\nReverse a Linked List in groups of given size.\nFinding the numbers\n\nComment\nMore info\nCampus Training Program\nNext Article\nMakeMyTrip Interview Experience | Set 4'}, {'title': 'Adobe Interview Experience 5 Rounds', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-5-rounds/', 'content_summary': 'Online Round(On Cocubes):- In this round there were an MCQ section(contained questions on aptitude and CS fundamentals) and a coding section( was pretty simple with just 3 basic level questions). \n\nTechnical Round 1:- ? (at Noida) \nDS Questions:- First question was to write a code of finding an intersection point in the merged linked lists, first I gave the stack based approach then optimized with the hashtable based approach. \nNext question was to find the pairs of numbers which make a given sum in the given array , only the approach was asked, so initially I gave loop based approach then optimized it with a hashing. Just then he asked me to find triplets which could make a sum as zero. \nThen third question was to find the minimum length section of an array which could be sorted to make the whole array as sorted , this was a little bit tricky, but the interviewer was helpful in giving couple of hints. \n\nCS Fundamentals:- \nI mentioned in my introduction that I am proficient in Java so he asked me some basic questions like difference between abstract class and interface and questions like what is inheritance how it is useful . There were also some questions on OS. \n\nTechnical Round 2:- \nHe asked me the working of google maps, what is the algorithm behind that and how would I implement it and if I need to find out the nearby clinics then what is the best way to do that. Then he asked me difference between BFS and DFS which one is better for the above functionality. Then he asked me a random question that GPS would work without internet or not. Then I was asked to code random number generating function which does not generates a pregenerated number twice. Then a couple of questions related to my projects. \nThen he asked OS questions, like what is Thrashing and how to prevent it, if you are rich then would you buy a 500 gb ram, if no why?( my ans-No, as Searching in ram then will become a costly operation) then there were questions on Paging, TLB, Virtual memory, Logical address etc. \n\nTechnical Round 3:- \nFirst he asked me about my projects(in detail this time), then he gave me a system design problem, to design a lift management system with multiple lifts and write the classes required tothe same, his main focus was on to find an algorithm to allocate lift so as to minimize the waiting time spent by a person.Firstly he asked me to find all the edge cases like if 2 lifts are equally far \nfrom a requesting floors then how will you allocate, so after a heavy discussion he asked me to write the code. \nThen some non-technical questions were asked like what would you change in your past in your education and why. \n\nHR Round:- \nIt was just a 10 min round.He asked general questions about the college placements then if I already had any offer and its details.Then I asked him that whether freshers are hired for purely research work in Adobe and if not then what is the procedure to get there. \n\nTips:- \nMake sure you brush up your CS fundamentals(especially OS and the language in which you are proficient ). They watch you throughout the day, even if you are sitting outside the interview hall, so be aware of that. It is ok not to answer all the questions correctly, you might go wrong with some but don’t let that demoralize or demotivate you as you need to be energetic till the end. \n\nAll the best!!\n \nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (5 Rounds)'}]",https://www.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:43:38.314140,GeeksforGeeks,Intersection in Y Shaped Lists,Medium,44.67%,301K+,45m,"Given the head of two singly linked lists, return the point where these two linked lists intersect.
Note: It is guaranteed that the intersected node always exists.
Custom Input Format:
head1 contains the nodes before intersection in list1
head2 contains the nodes before intersection in list2
CommonList contains the nodes after intersection of list1 and list2.
Examples:
Input: head1 : 4 -> 4 -> 4 -> 4 -> 4, head2 : 4 -> 4 -> 4
Output: 4
Explanation: From the above image, it is clearly seen that the common part is 4 -> 4 whose starting point is 4.
Input: head1 : 4 -> 1 -> 8 -> 4 -> 5, head2 : 5 -> 6 -> 1 -> 8 -> 4 -> 5
Output: 8
Explanation: From the above image, it is clearly seen that the common part is 8 -> 4 -> 5 whose starting point is 8.
Constraints:
2 ≤ total number of nodes ≤ 2*105
-104 ≤ node->data ≤ 104",O(n + m),O(1),"['VMWare', 'Flipkart', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'D-E-Shaw', 'FactSet', 'MakeMyTrip', 'Visa', 'Goldman Sachs', 'MAQ Software', 'Adobe', 'Qualcomm']","['Linked List', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/equal-to-product3836/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:43:58.657049,GeeksforGeeks,Product Pair,Medium,17.34%,71K+,Not available,"Given an array, arr[] of distinct elements, and a number x, find if there is a pair in arr[] with a product equal to x. Return true if there exists such pair otherwise false.
Examples:
Input: arr[] = [10, 20, 9, 40], x = 400
Output: true
Explanation: As 10 * 40 = 400, the answer is true.
Input: arr[] = [-10, 20, 9, -40], x = 30
Output: false
Explanation: No pair exists with product 30.
Expected Time Complexity: O(n)
Expected Space Complexity: O(n)
Constraints:
1 ≤ arr.size ≤ 105
-108 ≤ |arri| ≤ 108
-1018 ≤ |x| ≤ 1018",Not specified,Not specified,"['Amazon', 'Visa']","['Arrays', 'Data Structures']"
[],https://www.geeksforgeeks.org/problems/implement-stack-using-array/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:44:09.510773,GeeksforGeeks,Implement stack using array,Basic,54.76%,278K+,25m,"Write a program to implement a Stack using Array. Your task is to use the class as shown in the comments in the code editor and complete the functions push() and pop() to implement a stack. The push() method takes one argument, an integer 'x' to be pushed into the stack and pop() which returns an integer present at the top and popped out from the stack. If the stack is empty then return -1 from the pop() method.
Note: The input is given in form of queries. Since there are two operations push() and pop(), there is two types of queries as described below:
(i) 1 x   (a query of this type means  pushing 'x' into the stack)
(ii) 2     (a query of this type means to pop an element from the stack and print the popped element)
Input contains separated by space and as described above.
Examples :
Input: 1 2 1 3 2 1 4 2
Output: 3, 4
Explanation:
push(2) the stack will be {2}
push(3) the stack will be {2 3}
pop() poped element will be 3,
the stack will be {2}
push(4) the stack will be {2 4}
pop() poped element will be 4
Input: 2 1 4 1 5 2
Output: -1, 5
Expected Time Complexity: O(1)
Expected Space Complexity: O(1)
Constraints:
1 <= numbers of calls made to push, pop <= 100
1 <= x <= 100",Not specified,Not specified,"['FactSet', 'Visa', 'Goldman Sachs', 'Qualcomm', 'Kritikal Solutions']","['Arrays', 'Stack', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 4 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-4-on-campus/', 'content_summary': ""Round 1 (Written) \nAround 140 students appeared for the offline test. \n\n\nThere were 20 MCQs that to be done in (30 minutes), questions were from OS,DBMS,Datastructures. \nAfter that coding round was there (paper coding) in which 3 questions were given and we have to attempt any 2 (1 hour) \n\n1. Write your own sqrt() function. the function should return square root if it is a perfect square else return floor(sqrt(x)) \n2. Given an array containing positive and negative integers. you have to find the smallest missing positive number. your code should run in O(n) time and O(1) space. \n3. Given an array of strings, find whether the strings can be chained or not to form a circle. A string x can be put before another string y if last character of x is same as first character of y. \n\nAfter round-1 , 19 people were shortlisted for the interviews. \n\n\n\n\nRound 2 (Technical) (1:30 hr) \n1. Tell me about yourself. Meanwhile he(interviewer) looked into my CV and asked about my projects. \nI have done 3 projects so he started discussion CUDA and parallel programming and how you implemented over images to detect edges and how much gain factor achieved. \nsecondly,I have made an project on online voting system so he asked me to draw E-R diagram, schemas and the relationship between them and their functionalities.About (25-30) minutes discussion. \n\n2. Given a BST, you have to find the kth smallest element in it in O(n) time and O(1) space. \n\n3. Suppose you have server where multiple requests are coming at time to,t1,t2...Now suppose a user hits at any particular time t on the server then server should return the last request. you have to design the datastructure for the same. \nI suggested that we can use stack that will return the last request, he then asked me to do for last 10 requests then I suggested to use array of structures which will store request no. and timestamp along with them.Now at any time t we can move 10 elements back but he said that suppose user hits frequently then every time i will have to traverse back again and again so time complexity will be much high, I agreed and suggested another solution similar to LRU implementation so that the requests which are coming frequently can be processed faster. then he modified question that user wants requests of last 1 minute and he gave a hint that is it necessary to store all requests can we not just store requests of every 1 min only,then suddenly it clicked to me, I suggested to use deque for 60 secs now suppose request arrives at 61st sec then we can just add that at rear and remove one from front maintaining a window of 60 seconds.He was satisfied but he want that no deletion should be there so I told him to use circular deque so that we can replace previous elements.He was completely satisfied now with the approach.(About 35 min. discussion) \n\n4. Given an array containing prices of a share of 30 days.A person has 1 share which he can buy and sell any number of times, you have to find the maximum profit which can be earned. \nI suggested one approach to create two auxiliary array MIN from left and MAX from right and traverse both simultaneously if difference between MAX[i] and MIN[i] is greater than maxDiff then update maxDIff and store current index and add to sum if index+1 is not equal to current iteration index and finally return sum.He tried some test cases over my code and found that for some cases it was giving wrong answer,then he asked me that how is my command over dynamic programming,I told I know only the standard ones and no other experience,then he said this question is of DP but he was happy to see my approach.(About 20-25 min.) \n\n\n\n\nRound 3 (Technical) (1:30 hr) \n1. She(interviewer) asked me if I attempted 3rd question in written test, I said I attempted only 1st and 2nd, then she gave me paper and told to implement the 3rd question. \nI suggested an approach to use two arrays of structures(for first characters and last characters) which will contain boolean value to mark presence of character in string and also its index. Now compare two arrays and see that if both arrays have same boolean value and different indices for all first and last characters. If so then strings can form a chain else not.She was in doubt for my solution so she found a testcase where my code was giving wrong answer,so she told me to look for another solution,I came up with another approach and told her that we can make a directed graph from first and last characters and then traverse it in DFS, now suppose if the visited node is visited again and count of total visited nodes is same as total nodes then we can say that strings will form a chain, now she was satisfied with approach and asked me to write code, now as my graph was weak i was in shock,so she said to just write the pseudocode. \n\n2. Given a BST, you have to find the kth largest element in it in O(n) time and O(1) space. \nI suggested to declare a static variable count which will increment count if node visited in inorder and if count becomes k, I will print that node's data and return. Then she asked me how static works and difference between global and static. \n\n3. Given a mobile keypad of say nokia phone and a dictionary which has all the meaningful words which can be formed, suppose now user types some number(input) then your program must suggest all the meaningful words which are present in dictionary.Before implementing this she asked me the datastructure to store the dictionary efficiently and then how will you use this datastructure to make code. \nAt first, I suggested I will store dictionary in 2-D array and lexicograpphically sort it, now suppose user types a number the string starting with that character is searched in the array. she said to reduce complexity because dictionary may contain 1000s of words,then I suggested to use trie datastructure to store and search the string, she was satisfied now and asked me to explain the concept. \n4.Given preorder and postorder of a graph, how can you construct the graph. \nAs I heard this question, i was stuck for 2 minutes but then I said as far as graph is concerned I dont know about it but a unique tree cannot be constructed with preorder and postorder so as graph,so inorder is needed, she was happy and agreed on answer. \n\n\n\n\nRound 4 (Technical) (2:30 hr) \n1. Suppose a linked list is given and there is a loop, you have to find orphan nodes in O(n) time. orphan nodes are the nodes outside the loop. \n\n2. Design a BRTS traffic signalling system such that no two vehicle clashes. Note that BRTS bus will follow the BRTS traffic lights B1,B2,B3,B4 in 4 directions and regular traffic will follow regular traffic lights R1,R2,R3,R4 only. In input only maximum cycle time was given(time after which the process repeates) check for all corner cases (traffic lights have two states only (RED and GREEN)).you have to tell any one possible combination of traffic lights under maximum cycle time. (About 1hr discussion). \n\n3. Suppose a linked list is given but we dont know the count of nodes, you have to find the kth node from last without counting the nodes. \n4. Given an array of n integers such some elements are in the range 0 to n-1 and some out of range may be negative.You have to rearrange array such that all elements which are in range appear on their index and rest appear in sorted manner for indexes not present.This should be done in O(n) time and O(1) space. \nEg- suppose n=6 ,4 5 2 3 6 -3 output= -3,6,2,3,4,5 \n\n5. How can you implement stack using queue/queues. \n6. How can you sort the elements with the help of queue. \nI suggested one O(n) time solution along with O(n) extra space.He asked to do in O(1) space so I suggested deque, he seemed satisfied. \n\nonly 4 were selected till this round (I was one of them) \n\nRound 5 (Bar Raiser) (30 minutes) \n\n1. find the length of longest palindrome in a string starting from index 0. \n2. find if a string A is present in string B or not. \n3. find the length of longest prefix in a string \n\nAfter this 2 were selected finally and unfortunately I was not amongst them as they might have thought i was little stress out. At last I would suggest that your approach and concepts must be strong as they always give questions with some variations. \n\nRelated Practice ProblemsSmallest Positive missing numberCount SquaresCircle of stringsCheck for subsequenceStock buy and sellLongest Palindrome in a String\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 4 (On-Campus)""}, {'title': 'Amazon Interview Experience Set 412 Sde Ii', 'url': 'https://www.geeksforgeeks.org/amazon-interview-experience-set-412-sde-ii/', 'content_summary': ""Overall process time : 2 months(Sep'17 to Nov17) Overall 60+ people Total Rounds : 6 Overall Difficulty : 2.5 - 3 Round 1: (3 codes on paper )\nGiven a set of yesterday Amazon stock prices {2, -3, 5, 8, 1} Write a code to buy and sell those stocks at maximum profit.  Before sell, you must buy it at minimum price.        There should be one minute gap between buy and sell. Gain maximum profit by buying and selling 1 unit (very simple need to find min and max, I did it using thread join) GeeksforGeeks Link\nConvert a BST to a sum tree\nGiven a 1D Array. Return True if there exists an element where a[i]+a[j] = 0 && i!=j. Reference : Find Pair Given Difference\nInput: arr=(2,-3,4,1,-6,-4,1}\nOutput: True\nInput: arr={2,3,4,1,-6,4,1}\nOutput: False\nRound 2:\nRegular Expression parser like finite state automata Example: a*, aab*, abcb*c, ba*.c*, a.b, a*b etc etc and edge cases\nDesign a ranking system. We have an infinite supply of words ending with ‘.’ We need to implement a reader program that ranks words on the basis of certain criteria\n          Example:   This is my cat.\n          This house belongs to my uncle\n          An amazing country with so many tourist places And so on..\nRanking System criteria : rank the words on the basis of occurrence, for example Output : This:2, is:2, my:2… highest rank (sorted asc or desc based on  provided flag) Design it completely and scalable Ranking System.\nDesign a debugger\nRound 3:\nExplain your greatest accomplished project and what big you achieved? – Details of flow and architecture\nFind a longest palindrome String\nDesign Amazon Cart System. (HLD and LLD ) Discussion on solution.\nRound 4:\nGiven a Binary Tree, Replace every node with its larger Same as sum tree GeeksforGeeks\nPrint min & max (both) of all sub array of size k  Reference :\nGiven an integer array and find first k largest elements. Focus was on complexity of the code GeeksforGeeks Link\nGiven an integer array and an integer value X, return three elements in that array such that sum of them equals to X. GeeksforGeeks Link\nThis was the last round for the day as team had to return to Bangalore. HR shortlisted me along with other two candidates.  Due to Diwali they were falling short of staff for managerial rounds, So it look a month for other two rounds which happened in their Gurgaon office on VC\nRound 5:\nBar Raiser: (Duration : 1.15 hours)\nTell me about yourself\nWhat were the important projects you have worked on\nWhat was your contribution\nExplain Architecture, Design and detailed discussion\nWhat were challenges you faced and how did you solve them\nDesign a notification system “In Shorts”\nRound 6:\nHiring Manager :\n(Duration : 1.15 hours)\nIntroduction & very detailed project discussion\nBehavioral Questions –\nDid you encounter any conflicts with colleague or manager and how did you solve them\nHave you ever delivered more than expectations\nHave you ever completed project before deadline\nHave you have handled a client/customer efficiently and what did you\nDid you ever design a system/process\nWhat were the most critical projects you have worked on\nHow did you handle a critical situation or helped a colleague\nTell me about a time when you had to work on a project with unclear responsibilities\nHave you mentored someone? What were challenges you faced and how did you resolve\nWhat important technical decisions did you take and how did it help your team?\nWhy Amazon\nI recommend GeeksForGeeks for technical coding rounds, educative.io for design and\nhttp://kraftshala.com/how-to-raise-the-bar-in-the-amazon-interview/\nfor behavioral. Pretty much covers all the details. They announced result after a week and I was selected\nAll Practice Problems for Amazon !\n\n\nComment\nMore info\nCampus Training Program\nNext Article\nAmazon interview Experience | Set 412 (SDE II)""}]",https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string1956/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:44:20.538579,GeeksforGeeks,Longest Palindromic Substring,Medium,36.96%,42K+,25m,"Given a string s, return the longest palindromic substring in s.
Substring of string s is a contiguous sequence of characters within a string, i.e. s[ i . . . . j ] where 0 ≤ i ≤ j < len(s).
Palindromic string is a string which reads the same forwards and backwards. More formally, s is palindrome if reverse(s) = s.
If there are multiple longest palindromic substrings, return the substring with the least starting index .
Examples :
Input: s = ""aaaabbaa""
Output: aabbaa
Explanation: The longest palindrome string present in
the given string is ""aabbaa"".
Input: s = ""geeks""
Output: ee
Explanation: The longest palindrome string present in
the given string is ""ee"".
Constraints:
1 ≤ |s| ≤ 104",O(n^2),O(1),"['Zoho', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'MakeMyTrip', 'Visa', 'Walmart', 'Qualcomm', 'Groupon']","['Strings', 'Data Structures', 'Dynamic Programming']"
"[{'title': 'Accolite Interview Experience Set 16 Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-16-campus/', 'content_summary': 'Round 1 (APTITUDE) :\n20 mcqs in 30 minutes of time\n-0.25 negative marking\nQuestions were from core computer science subjects and one blood relation problem in general section\nThe cut was 10/20\nAround 700 people attended they selected 20 Round 2 (WRITTEN CODING) :\n3 written coding questions(one was Left view of a tree) to be solved in one hour of time and i solved two and i was selected for the next round\nIn this round out of 20 they selected 10.\nRound 3 (TECHNICAL HR-1) :\nI was asked 8 Queens problem\nGiven an array find two non repeating elements in linear time complexity and no extra space\nRound 4 (TECHNICAL HR-2):\nBasic questions from my resume and projects.\nSearch in a row wise and column wise sorted matrix\nOne design question.\nRound 5 (Technical HR-3):\nThe Stock Span Problem\nFirst i came up with the naive solution and then came up with the idea of using stack.\nIn each round the coding that you wrote in the previous rounds will always get passed through and will be analyzed at each rounds.\nRound 6 (General HR):\nBasic questions on my resume\nPreferred work places\nWhat do you expect in Accolite?\nWhy Accolite?\nHobbies\nStrengths and Weaknesses\nFinally I was the only one who got selected. Note:\nGeeksforgeeks was very helpful and more than enough.Therefore practice hard in GeeksforGeeks\nPractice paper coding because we will get a lot of mistakes while writing the code on paper.\nThere requires a slight amount of luck on that day of interview so please work very hard to mitigate that factor of luck\nRelated Practice Problems\nStock span problem\nN-Queen Problem\nSearch in a matrix\nFinding the numbers\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 16 (On-Campus)'}]",https://www.geeksforgeeks.org/problems/n-queen-problem0315/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:44:36.654855,GeeksforGeeks,N-Queen Problem,Hard,35.43%,107K+,25m,"The n-queens puzzle is the problem of placing n queens on a (n × n) chessboard such that no two queens can attack each other. Note that two queens attack each other if they are placed on the same row, the same column, or the same diagonal.
Given an integer n, find all distinct solutions to the n-queens puzzle.
You can return your answer in any order but each solution should represent a distinct board configuration of the queen placements, where the solutions are represented as permutations of [1, 2, 3, ..., n]. In this representation, the number in the ith position denotes the row in which the queen is placed in the ith column.
For eg. below figure represents a chessboard [3 1 4 2].
Examples:
Input: n = 1
Output: [1]
Explaination: Only one queen can be placed in the single cell available.
Input: n = 4
Output: [[2 4 1 3 ] [3 1 4 2 ]]
Explaination: There are 2 possible solutions for n = 4.
Input: n = 2
Output: []
Explaination: There are no possible solutions for n = 2.
Constraints:
1 ≤ n ≤ 10",O(n!),O(n^2),"['Accolite', 'Amazon', 'Microsoft', 'D-E-Shaw', 'Visa', 'MAQ Software', 'Amdocs', 'Twitter']","['Backtracking', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/the-lazy-caterers-problem2527/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:44:50.911486,GeeksforGeeks,The Lazy Caterer's Problem,Basic,60.14%,12K+,10m,"Given an integer n, denoting the number of cuts that can be made on a pancake, find the maximum number of pieces that can be formed by making n cuts.
NOTE: Cuts can't be horizontal.
Example 1:
Input: N = 5
Output: 16
Explanation: 16 pieces can be formed by
making 5 cuts.
Example 2:
Input: N = 3
Output: 7
Explanation: 7 pieces can be formed by
making 3 cuts.
Your Task:
You don't need to read or print anything. Your task is to complete the function maximum_Cuts() which takes n as input parameter and returns the maximum number of pieces that can be formed by making n cuts.
Expected Time Complexity: O(1)
Expected Space Complexity: O(1)
Constraints:
1 <= N <= 10000",Not specified,Not specified,['Visa'],"['Mathematical', 'Algorithms']"
"[{'title': 'De Shaw Off Campus Fresher Interview Experience', 'url': 'https://www.geeksforgeeks.org/de-shaw-off-campus-fresher-interview-experience/', 'content_summary': ""How I Applied? \nI applied through their careers page https://www.deshawindia.com/OpenPositions.shtml . \nI got to know about their recruiting through a friend. Then got an invitation for their OffCampus test after a week of applying.\n\nHackerrank  Test : \nThe test was for 100 marks with 90 minutes time limit. The format of the test is as follows:\nProgramming Section: It had 2 coding questions of 20 and 40 marks each, with a time limit of 50 minutes.\nMCQ Section: This had 10 technical and 10 aptitude questions, with a time limit of 20 minutes each. Each correct answer will carry 2 marks and the wrong answer will carry negative 0.5 marks.\nTechnical questions will cover Data structures & algorithms, Operating systems, Database systems, SQL, and Networks.\nAptitude questions will cover Quantitative Aptitude, Problem-solving, and Logical & verbal Reasoning.\nThe first Coding question was easy, something related to array manipulation and implementation. Another one was about finding kth permutation of a string (k<=1e9).\nRound 1: CodePair Round 1.5 hr\nI got a reply from them after a month of the test. In CodePair Round the interviewer asked me to solve two programming questions. The first one was quite easy and straight forward it said to find the number of ways a given number can be expressed as a sum of more than 1 consecutive natural numbers. You can find the link https://www.geeksforgeeks.org/problems/count-of-sum-of-consecutives3741/1. \nThe second one was: Given a matrix(n * m) and a queen positioned at (n-1,m/2). Find the number of ways in which the queen can reach cell no. (x,y) in minimum number of moves. There were Q queries of (x,y). The queen can move in any of the eight valid directions in one move. Preprocessing of O(n2) was allowed and queries were supposed to be answered in O(1).\nThen there was a small discussion on my projects and some questions regarding polymorphism, Virtual functions were asked along with other OOPS concept.\nRound 2: Technical Round 1 hr\nThis round was also on HackerRank CodePair. I was supposed to solve one programming. The question was: Given stock prizes for N days. Each day you could either buy a stock or sell some/all of the stocks you have purchased previously. It is also allowed to not perform any operation for a day.  \nBuying a stock will count as a negative addition to profit and selling will count as a positive addition to the profit. Find the maximum profit that could be achieved given the Stock prizes for N days. \nExample :  [1,5,2,100,3,2]\nBuy stocks for first three days = -1 + -5 + -2 = -8\nSell all the stocks on the fourth day = +100*4 \nDon't do anything on the fifth and sixth day as there is no way one could sell the bought stock at a higher price. Thus, maximum profit = -8 + 100*4 = 392\nMy Solution: Find the next maximum Stock price for each day and buy that stock only if there is any available higher prize. So the profit will be: \nFor each ith day buying a stock ( - stockPrize[i] ) and selling the stock at a later day with highest stock prize ( i.e. +max(stockPrize[i+1,n-1] ) ). This range maximum could be easily computed using suffix maximum, given a solution in linear time.\nApart from this coding question I was asked questions from DBMS, OS, Projects: \nWhat is a Composite Index? How does it work?\nSome SQL queries using joins.\nWhat is the significance of on condition in an outer join?\nSome questions on the Tech Stack of my Projects.\nQuestions on ReactJS, as I had some projects and internships on that.\nThe lifeCycle of React? Why React is used?  What is Virtual DOM? How does it work? etc.\nRound 3: Technical Round 1.5 hr\nThis round was also on HackerRank CodePair. Design and implement a class that can be used to allocate and de-allocate a certain amount of memory blocks. The class will initially have a fixed block of memory which will only be used to allocate memory. Say 1024 blocks.\nThey were expecting me to think and design a prototype that will work the way internally memory management works.\nDiscussion on what data structure could be used for allocating contiguous blocks of memory. What methods will be used and what will their signatures?\nWhich data structure is the most suitable and why?  What will be the complexity of the allocate and de-allocate functions? \nHow will you handle the situation of a variable amount of memory blocks?\nWhile I was implementing the prototype of the class they asked me to write Copy Constructor and also asked to overload the subscript operator for the class.\nDoes the copy constructor do a shallow copy or a deep copy? If Shallow then how will you make this a Deep Copy? What are the problems in Shallow Copy?\nThere is no right or wrong answer for the Class Design. They just want to judge you on how you could apply CS fundamentals to solve the problem and are you able to identify some flaws in the design and also they expect you to eventually solve them.\nGiven a file consisting of millions of records. The data is in a structured format i.e in a tabular format with each record consisting of many attributes. \nHow will you perform search operation on the file given the file is stored in secondary memory? Optimize it.\nWhat if the whole file can be brought into the main memory?\nSorting is not an option as data needs to be searched on different attributes, how will you optimally solve this?\nIf you are allowed to store additional data structures after doing some preprocessing on the file in order to perform an optimized search operation. What data structures will you use and how much effect it will have on optimality?\nWhat is a Trie Data Structure? Explain it's node structure and working? What is it's applications?\nHow will you optimize the memory usage in Trie?\n  A simple Game Theory question: Given Two Players A and B separated by N number of tiles. In a move, each one can move one or two-step ahead. Who will win if player A starts and each one plays alternately and optimally. The player who is not able to make any move losses the game.\nA _ _ _ _ B for n=4  \nSolution : \nIf n=1 or 2, A wins in one move. Thus, both n=1 and n=2 are winning states\nn=3, B wins as from n=3 we could go to either n=1 or n=2 and both are winning states\nThus if f(n) = 0 if B wins and \n                          1 if A wins\nf(n) = 0 if ( f(n-1)==1 and f(n-2)==1 ) \nf(n) = 1 if( f(n-1)==0 or f(n-2)==0 )\nBase cases f(2)=1 and f(1)=1This could be solved in linear time. But if you write down all the values of f() you will find that it decomposes to f(n) =  0 if n is a multiple of 3 otherwise f(n)=1.\n\nAfter a day or two, I got their call that they are willing to offer me the position. \n\nComment\nMore info\nAdvertise with us\nNext Article\nDE Shaw Off-Campus Fresher Interview Experience""}]",https://www.geeksforgeeks.org/problems/count-of-sum-of-consecutives3741/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:45:01.768515,GeeksforGeeks,Count of sum of consecutives,Medium,24.63%,21K+,20m,"Given a number N, the task is find the number of ways to represent this number as a sum of 2 or more consecutive natural numbers.
Example 1:
Input:
N = 10
Output:
1
Explanation:
10 can be reprsented as sum of two or
more consecutive numbers in only one
way. 10 = 1+2+3+4.
Example 2:
Input:
N = 15
Output:
3
Explanation:
15 can be reprsented as sum of two or
more consecutive numbers in 3 ways.
(15 = 1+2+3+4+5); (15 = 4+5+6); (15 = 7+8).
Your Task:
You don't need to read input or print anything. Your task is to complete the function getCount() which takes an Integer n as input and returns the answer.
Expected Time Complexity: O(sqrt(N))
Expected Auxiliary Space: O(1)
Constraints:
1 <= N <= 108",Not specified,Not specified,"['Visa', 'Walmart', 'Linkedin']","['Mathematical', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/-minimum-number-of-coins4426/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:45:15.637982,GeeksforGeeks,Minimum number of Coins,Easy,51.25%,87K+,Not available,"Given an infinite supply of each denomination of Indian currency { 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 } and a target value N.
Find the minimum number of coins and/or notes needed to make the change for Rs N. You must return the list containing the value of coins required.
Example 1:
Input: N = 43
Output: 20 20 2 1
Explaination:
Minimum number of coins and notes needed
to make 43.
Example 2:
Input: N = 1000
Output: 500 500
Explaination: minimum possible notes
is 2 notes of 500.
Your Task:
You do not need to read input or print anything. Your task is to complete the function minPartition() which takes the value N as input parameter and returns a list of integers in decreasing order.
Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)
Constraints:
1 ≤ N ≤ 106",Not specified,Not specified,['Visa'],"['Dynamic Programming', 'Greedy', 'Algorithms']"
"[{'title': 'Accolite Interview Experience Set 6 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-6-on-campus/', 'content_summary': ""Round 1(Written): There was a technical online test in the first round. 20 questions were to be done in 30 minutes.Questions were basically from data structures, DBMS, operating systems. There was a negative marking of 0.5. After this, 10 students were shortlisted. Round 2(Technical) (2 hours): 1. Introduce yourself 2. Given a string, I had to construct tree from that string. Also I needed to write the code for it. 3. I was asked to construct the schema for the voting system of India, to put all the keys like primary key, foreign key etc. in the tables, to normalize the schema. All the 5 Normal forms should be fulfilled. Then I had to write query to display the political party who won the elections. After this round, 5 students were shorlisted. Round 3(technical) (2 hours): 1. Given a file of size 500MB which contains cgpa of students as a single stream without spaces and without any other separator. I had to tell them the logic to separate the different cgpa's. Also, I needed to tell them which data structure should be used to store the cgpa's efficiently. 2. Given a link list I had to tell whether it contains a cycle or not. If there was a cycle then which nodes were orphan nodes (i.e. the nodes which were not in the cycle ). 3. Given an array of positive numbers, I had to tell them whether the square root of the array element exist in the same array or not. If it exists then display that number. 4. Given an array containing denominations (i.e. the value of different coins) and the total sum. I had to find the minimum number of coins needed to make that sum. After this round 2 students were shortlisted. Round 4 (HR interview ) (30-45 mins): 1. Introduce yourself 2. What are your strengths and weaknesses? 3. What do you want to become in future? 4. A situation was given to me like if I was selected and I had to work late at night on some project whose deadline was approaching. Then what will be my reaction? 5. Asked me about my interests and hobbies.\nRelated Practice Problems\nNumber of Coins\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 6 (On-Campus)""}]",https://www.geeksforgeeks.org/problems/number-of-coins1824/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:45:27.324487,GeeksforGeeks,Coin Change (Minimum Coins),Medium,26.74%,258K+,Not available,"You are given an array coins[], where each element represents a coin of a different denomination, and a target value sum. You have an unlimited supply of each coin type {coins1, coins2, ..., coinsm}.
Your task is to determine the minimum number of coins needed to obtain the target sum. If it is not possible to form the sum using the given coins, return -1.
Examples:
Input: coins[] = [25, 10, 5], sum = 30
Output: 2
Explanation: Minimum 2 coins needed, 25 and 5
Input: coins[] = [9, 6, 5, 1], sum = 19
Output: 3
Explanation: 19 = 9 + 9 + 1
Input: coins[] = [5, 1], sum = 0
Output: 0
Explanation: For 0 sum, we do not need a coin
Input: coins[] = [4, 6, 2], sum = 5
Output: -1
Explanation: Not possible to make the given sum.
Constraints:
1 ≤ sum * coins.size() ≤ 106
0 <= sum <= 104
1 <= coins[i] <= 104
1 <= coins.size() <= 103",O(coins.size * sum),O(sum),"['Paytm', 'Morgan Stanley', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'Snapdeal', 'Oracle', 'Visa', 'Google', 'Synopsys']","['Dynamic Programming', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/does-robot-moves-circular0414/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:45:42.545679,GeeksforGeeks,Does robot moves circular,Easy,48.1%,10K+,Not available,"Given a sequence of moves for a robot. Check if the sequence is circular or not.
A sequence of moves is circular if the first and last positions of the robot are the same. A move can be one of the following :
G - Go one unit
L - Turn left
R - Turn right
Example 1:
Input: path = ""GLGLGLG""
Output: ""Circular""
Explanation: If we start form
(0,0) in a plane then we will
back to (0,0) by the end of the
sequence.
â€‹Example 2:
Input: path = ""GGGGL""
Output: ""Not Circular""
Explanation: We can't return to
same place at the end of the path.
Your Task:
You don't need to read input or print anything. Your task is to complete the function isCircular() which takes the string path as input and returns ""Circular"" if the path is circular else returns ""Not Circular"".
Expected Time Complexity: O(|S|)
Expected Auxiliary Space: O(1)
Constraints:
1 ≤ |S| ≤ 105",Not specified,Not specified,"['Amazon', 'Visa']","['Strings', 'Data Structures']"
"[{'title': 'Accolite Interview Experience Set 4 On Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-4-on-campus/', 'content_summary': ""Round 1 (Written) \nAround 140 students appeared for the offline test. \n\n\nThere were 20 MCQs that to be done in (30 minutes), questions were from OS,DBMS,Datastructures. \nAfter that coding round was there (paper coding) in which 3 questions were given and we have to attempt any 2 (1 hour) \n\n1. Write your own sqrt() function. the function should return square root if it is a perfect square else return floor(sqrt(x)) \n2. Given an array containing positive and negative integers. you have to find the smallest missing positive number. your code should run in O(n) time and O(1) space. \n3. Given an array of strings, find whether the strings can be chained or not to form a circle. A string x can be put before another string y if last character of x is same as first character of y. \n\nAfter round-1 , 19 people were shortlisted for the interviews. \n\n\n\n\nRound 2 (Technical) (1:30 hr) \n1. Tell me about yourself. Meanwhile he(interviewer) looked into my CV and asked about my projects. \nI have done 3 projects so he started discussion CUDA and parallel programming and how you implemented over images to detect edges and how much gain factor achieved. \nsecondly,I have made an project on online voting system so he asked me to draw E-R diagram, schemas and the relationship between them and their functionalities.About (25-30) minutes discussion. \n\n2. Given a BST, you have to find the kth smallest element in it in O(n) time and O(1) space. \n\n3. Suppose you have server where multiple requests are coming at time to,t1,t2...Now suppose a user hits at any particular time t on the server then server should return the last request. you have to design the datastructure for the same. \nI suggested that we can use stack that will return the last request, he then asked me to do for last 10 requests then I suggested to use array of structures which will store request no. and timestamp along with them.Now at any time t we can move 10 elements back but he said that suppose user hits frequently then every time i will have to traverse back again and again so time complexity will be much high, I agreed and suggested another solution similar to LRU implementation so that the requests which are coming frequently can be processed faster. then he modified question that user wants requests of last 1 minute and he gave a hint that is it necessary to store all requests can we not just store requests of every 1 min only,then suddenly it clicked to me, I suggested to use deque for 60 secs now suppose request arrives at 61st sec then we can just add that at rear and remove one from front maintaining a window of 60 seconds.He was satisfied but he want that no deletion should be there so I told him to use circular deque so that we can replace previous elements.He was completely satisfied now with the approach.(About 35 min. discussion) \n\n4. Given an array containing prices of a share of 30 days.A person has 1 share which he can buy and sell any number of times, you have to find the maximum profit which can be earned. \nI suggested one approach to create two auxiliary array MIN from left and MAX from right and traverse both simultaneously if difference between MAX[i] and MIN[i] is greater than maxDiff then update maxDIff and store current index and add to sum if index+1 is not equal to current iteration index and finally return sum.He tried some test cases over my code and found that for some cases it was giving wrong answer,then he asked me that how is my command over dynamic programming,I told I know only the standard ones and no other experience,then he said this question is of DP but he was happy to see my approach.(About 20-25 min.) \n\n\n\n\nRound 3 (Technical) (1:30 hr) \n1. She(interviewer) asked me if I attempted 3rd question in written test, I said I attempted only 1st and 2nd, then she gave me paper and told to implement the 3rd question. \nI suggested an approach to use two arrays of structures(for first characters and last characters) which will contain boolean value to mark presence of character in string and also its index. Now compare two arrays and see that if both arrays have same boolean value and different indices for all first and last characters. If so then strings can form a chain else not.She was in doubt for my solution so she found a testcase where my code was giving wrong answer,so she told me to look for another solution,I came up with another approach and told her that we can make a directed graph from first and last characters and then traverse it in DFS, now suppose if the visited node is visited again and count of total visited nodes is same as total nodes then we can say that strings will form a chain, now she was satisfied with approach and asked me to write code, now as my graph was weak i was in shock,so she said to just write the pseudocode. \n\n2. Given a BST, you have to find the kth largest element in it in O(n) time and O(1) space. \nI suggested to declare a static variable count which will increment count if node visited in inorder and if count becomes k, I will print that node's data and return. Then she asked me how static works and difference between global and static. \n\n3. Given a mobile keypad of say nokia phone and a dictionary which has all the meaningful words which can be formed, suppose now user types some number(input) then your program must suggest all the meaningful words which are present in dictionary.Before implementing this she asked me the datastructure to store the dictionary efficiently and then how will you use this datastructure to make code. \nAt first, I suggested I will store dictionary in 2-D array and lexicograpphically sort it, now suppose user types a number the string starting with that character is searched in the array. she said to reduce complexity because dictionary may contain 1000s of words,then I suggested to use trie datastructure to store and search the string, she was satisfied now and asked me to explain the concept. \n4.Given preorder and postorder of a graph, how can you construct the graph. \nAs I heard this question, i was stuck for 2 minutes but then I said as far as graph is concerned I dont know about it but a unique tree cannot be constructed with preorder and postorder so as graph,so inorder is needed, she was happy and agreed on answer. \n\n\n\n\nRound 4 (Technical) (2:30 hr) \n1. Suppose a linked list is given and there is a loop, you have to find orphan nodes in O(n) time. orphan nodes are the nodes outside the loop. \n\n2. Design a BRTS traffic signalling system such that no two vehicle clashes. Note that BRTS bus will follow the BRTS traffic lights B1,B2,B3,B4 in 4 directions and regular traffic will follow regular traffic lights R1,R2,R3,R4 only. In input only maximum cycle time was given(time after which the process repeates) check for all corner cases (traffic lights have two states only (RED and GREEN)).you have to tell any one possible combination of traffic lights under maximum cycle time. (About 1hr discussion). \n\n3. Suppose a linked list is given but we dont know the count of nodes, you have to find the kth node from last without counting the nodes. \n4. Given an array of n integers such some elements are in the range 0 to n-1 and some out of range may be negative.You have to rearrange array such that all elements which are in range appear on their index and rest appear in sorted manner for indexes not present.This should be done in O(n) time and O(1) space. \nEg- suppose n=6 ,4 5 2 3 6 -3 output= -3,6,2,3,4,5 \n\n5. How can you implement stack using queue/queues. \n6. How can you sort the elements with the help of queue. \nI suggested one O(n) time solution along with O(n) extra space.He asked to do in O(1) space so I suggested deque, he seemed satisfied. \n\nonly 4 were selected till this round (I was one of them) \n\nRound 5 (Bar Raiser) (30 minutes) \n\n1. find the length of longest palindrome in a string starting from index 0. \n2. find if a string A is present in string B or not. \n3. find the length of longest prefix in a string \n\nAfter this 2 were selected finally and unfortunately I was not amongst them as they might have thought i was little stress out. At last I would suggest that your approach and concepts must be strong as they always give questions with some variations. \n\nRelated Practice ProblemsSmallest Positive missing numberCount SquaresCircle of stringsCheck for subsequenceStock buy and sellLongest Palindrome in a String\n\n \n\n\nAll Practice Problems for Accolite ! \n\n\n \n \nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 4 (On-Campus)""}]",https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string3411/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:45:54.903605,GeeksforGeeks,Longest Palindrome in a String,Medium,23.2%,332K+,Not available,"Given a string s, your task is to find the longest palindromic substring within s.
A substring is a contiguous sequence of characters within a string, defined as s[i...j] where 0 ≤ i ≤ j < len(s).
A palindrome is a string that reads the same forward and backward. More formally, s is a palindrome if reverse(s) == s.
Note: If there are multiple palindromic substrings with the same length, return the first occurrence of the longest palindromic substring from left to right.
Examples :
Input: s = “forgeeksskeegfor”
Output: “geeksskeeg”
Explanation: There are several possible palindromic substrings like “kssk”, “ss”, “eeksskee” etc. But the substring “geeksskeeg” is the longest among all.
Input: s = “Geeks”
Output: “ee”
Explanation: ""ee"" is the longest palindromic substring of ""Geeks"".
Input: s = “abc”
Output: “a”
Explanation: ""a"", ""b"" and ""c"" are longest palindromic substrings of same length. So, the first occurrence is returned.
Constraints:
1 ≤ s.size() ≤ 103
s consist of only lowercase English letters.",O(n^2),O(1),"['Zoho', 'Accolite', 'Amazon', 'Microsoft', 'Samsung', 'MakeMyTrip', 'Visa', 'Walmart', 'Google', 'Qualcomm', 'Groupon']","['Strings', 'Dynamic Programming', 'palindrome', 'Data Structures', 'Algorithms']"
"[{'title': 'Visa Interview Experience Set 10 On Campus', 'url': 'https://www.geeksforgeeks.org/visa-interview-experience-set-10-on-campus/', 'content_summary': 'I recently interviewed for Visa Inc. on our campus.\nCoding Test:\nPlatform: Hackerrank\nQuestions:\nFind the number of islands\nhttps://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/\nI dont remember the other two (PS: they were very easy compared to above two)\nFollowing the Coding round I was shortlisted for the personal interview round. Total 30 students were shortlisted.\nPersonal Interview:\n  Round 1:\nInterviewer asked me to introduce myself. Asked me to go through my CV.\nSeeing that i had done some work in Image processing he asked me to design a schematic to store multiple images in a single file.\nFind the point where maximum intervals overlap\nGiven a function and some text cases i needed to design an algorithm to determine how many lines of code were executing for each testcase.\nRound 2:\nGiven my major in Electrical Engineering the interviewer asked me a how to design an IOT type of protocol.\n He then asked me to explain the algorithm of one of my projects.\nHe asked me about the software used in Fast and Furious 7 (Godseye) and asked if I am implementing it what are the pros and cons from the implementation point of view.\nHe then asked me if given transactional data from visa cards how will I detect frauds in the data and how will I handle the lagre volume of data.\nRound 3 (final round)\nRound 3 was predominantly HR.\nI was asked to explain my project in simple not technical way in writing, verbally and diagrammatically.\nHe then asked me what type of members do I not get along with in a team.\nI was given a puzzle similar to : http://www.mytechinterviews.com/gold-for-7-days-of-work\nHe then asked me about my interests apart from academics.\nThen I was asked if I had any questions for him.\n  Related Practice Problems\nMaximum Intervals Overlap\nAll Practice Problems for Visa !\n\nComment\nMore info\nCampus Training Program\nNext Article\nVisa Interview Experience |Set 10 (On-Campus)'}, {'title': 'Flipkart Interview Experience Set 28 For Sde2', 'url': 'https://www.geeksforgeeks.org/flipkart-interview-experience-set-28-for-sde2/', 'content_summary': 'Round1: Machine coding and discussion based on that. Was asked to design and code snake and ladder game. Then questions where asked on how it can be extended. Round 2: puzzles and data structures Question 1: you are given a 1d array. The values represent the height of wall from floor. We are supposed to find what will be the amount of water it can hold. For ex.. Array(1,0,3) can hold 1 unit of water. Array(3,1,3) can hold 2 units of water. I did not give correct solution here. Can anyone suggest me the correct solution here... Question 2: We have a huge log file for meeting times in an office. Each entry has only start and end time. Given this we have to find the time which has the most number of meetings. He basically expected me to sort it and find the conflicting entries. I was rejected in this round. But all interviewers were down to earth. It was a nice experience. All the best for others.\nAll Practice Problems for Flipkart !\n\nComment\nMore info\nAdvertise with us\nNext Article\nFlipkart Interview Experience | Set 28 (For SDE2)'}]",https://www.geeksforgeeks.org/problems/maximum-intervals-overlap5708/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:46:33.961920,GeeksforGeeks,Maximum Intervals Overlap,Medium,48.73%,22K+,Not available,"Consider a big party where N guests came to it and a log register for guest’s entry and exit times was maintained. Find the minimum time at which there were maximum guests at the party. Note that entries in the register are not in any order.
Note: Guests are leaving after the exit times.
Example 1:
Input:
N = 5
Entry= {1, 2,10, 5, 5}
Exit = {4, 5, 12, 9, 12}
Output: 3 5
Explanation: At time 5 there were
guest number 2, 4 and 5 present.
Example 2:
Input:
N = 7
Entry= {13, 28, 29, 14, 40, 17, 3}
Exit = {107, 95, 111, 105, 70, 127, 74}
Output: 7 40
Explanation: At time 40 there were
all 7 guests present in the party.
Your Task:
You don't need to read input or print anything. Your task is to complete the function findMaxGuests() which takes 3 arguments(Entry array, Exit array, N) and returns the maximum number of guests present at a particular time and that time as a pair.
Expected Time Complexity: O(N*Log(N) ).
Expected Auxiliary Space: O(1).
Constraints:
1 <= N <= 105
1 <= Entry[i],Exit[i] <= 105",Not specified,Not specified,"['Flipkart', 'Accolite', 'Amazon', 'Visa', 'Directi']","['Sorting', 'Algorithms']"
[],https://www.geeksforgeeks.org/problems/find-pair-given-difference1559/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:46:52.114450,GeeksforGeeks,Find Pair Given Difference,Easy,27.25%,273K+,15m,"Given an array, arr[] and an integer x, return true if there exists a pair of elements in the array whose absolute difference is x, otherwise, return false.
Examples:
Input: arr[] = [5, 20, 3, 2, 5, 80], x = 78
Output: true
Explanation: Pair (2, 80) have an absolute difference of 78.
Input: arr[] = [90, 70, 20, 80, 50], x = 45
Output: false
Explanation: There is no pair with absolute difference of 45.
Input: arr[] = [1], x = 1
Output: false
Constraints:
1<= arr.size() <=106
1<= arr[i] <=106
0<= x <=105",O(n log n),O(1),"['Amazon', 'Visa']","['Sorting', 'Binary Search', 'Algorithms']"
"[{'title': 'Accolite Interview Experience Set 16 Campus', 'url': 'https://www.geeksforgeeks.org/accolite-interview-experience-set-16-campus/', 'content_summary': 'Round 1 (APTITUDE) :\n20 mcqs in 30 minutes of time\n-0.25 negative marking\nQuestions were from core computer science subjects and one blood relation problem in general section\nThe cut was 10/20\nAround 700 people attended they selected 20 Round 2 (WRITTEN CODING) :\n3 written coding questions(one was Left view of a tree) to be solved in one hour of time and i solved two and i was selected for the next round\nIn this round out of 20 they selected 10.\nRound 3 (TECHNICAL HR-1) :\nI was asked 8 Queens problem\nGiven an array find two non repeating elements in linear time complexity and no extra space\nRound 4 (TECHNICAL HR-2):\nBasic questions from my resume and projects.\nSearch in a row wise and column wise sorted matrix\nOne design question.\nRound 5 (Technical HR-3):\nThe Stock Span Problem\nFirst i came up with the naive solution and then came up with the idea of using stack.\nIn each round the coding that you wrote in the previous rounds will always get passed through and will be analyzed at each rounds.\nRound 6 (General HR):\nBasic questions on my resume\nPreferred work places\nWhat do you expect in Accolite?\nWhy Accolite?\nHobbies\nStrengths and Weaknesses\nFinally I was the only one who got selected. Note:\nGeeksforgeeks was very helpful and more than enough.Therefore practice hard in GeeksforGeeks\nPractice paper coding because we will get a lot of mistakes while writing the code on paper.\nThere requires a slight amount of luck on that day of interview so please work very hard to mitigate that factor of luck\nRelated Practice Problems\nStock span problem\nN-Queen Problem\nSearch in a matrix\nFinding the numbers\nAll Practice Problems for Accolite !\n\nComment\nMore info\nCampus Training Program\nNext Article\nAccolite Interview Experience | Set 16 (On-Campus)'}, {'title': 'Paytm Interview Experience Set 8 Hiring Drive For Backend Engineer', 'url': 'https://www.geeksforgeeks.org/paytm-interview-experience-set-8-hiring-drive-for-backend-engineer/', 'content_summary': 'Paytm Hiring Drive for Backend Engineer. The selection process was completed on the same day.\nRound 1 ( Written ): It was a technical written round with 20 questions out of which 2 were coding questions. Rest 18 was objective type mainly C, SQL, and Algo.\nWrite code to create a mirror image of a tree.\nGiven an array of arrival and departure times of guests, find a minimum no of rooms required to accommodate guests at any point of time.\nRound 2 :\nWAP to search a number in a row-wise - column-wise sorted matrix.\nFlatten a linked list.\nDiscussions around Binary Search and Ternary Search.\nDiscussed objective questions of a written round.\nRound 3 :\nHow will you store a series of mobile nos in memory efficiently (less space). e.g mobile nos like 999900001,999900003,999900005,999910006,999910007 ... are there. DS should be designed such that retrieval is not inefficient.\nStream of Access logs is given to you with user id, page id, and date. Design Data structure to find n recent unique visitors and pages they visited.\nThe current company projects discussions.\nI thank GFG a lot for helping me in my preparation, finally, I was selected\nAll Practice Problems for Paytm !\nRelated Practice Problems\nMirror Tree\nSearch in a matrix\n\nComment\nMore info\nCampus Training Program\nNext Article\nPaytm Interview Experience | Set 8 (Hiring Drive for Backend Engineer)'}, {'title': 'Adobe Interview Experience For Internship', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-for-internship/', 'content_summary': ""Round 1: Round one was an online test with 4 sections, each section was timed and you cannot switch between the sections. The sections can be attempted in a specific order only:\nSection 1: Cognitive assessment – 20 MCQs, 20 mins. The questions were related to logical reasoning and basic math.\nSection 2: Technical assessment – 20 MCQs, 20 mins. The questions were related to basic computers' knowledge like DSA, OS, DBMS, Syntax checking.\nSection 3: Coding assessment – 2 questions:\nNumber with the maximum occurrence of digit K. An array of numbers was given and a single number k was given, the number which has the maximum occurrence of k should be printed. Ex:\narray: {22, 32, 242, 277, 222}, k=2, \noutput:222\nWildcard matching – Similar question.\nSection 4: Gamified assessment – These were like the memory-based games and had 3-4 levels per game.\nRound 2: This was a telephonic round held on BlueJeans which lasted for approximately one hour, the interviewer greeted me and told me to tell me about myself, I gave a brief introduction about my education and a little about my family and my hobbies. Then he asked me the average time I spend on coding on a daily basis and my language of preference.\nThen he gave me a coding question to code on the spot while sharing my screen and explaining what am I doing. The question was similar to this question.\nI gave a basic solution to which he asked the time complexity and asked me to optimize it. PRACTICE OPTIMIZED CODING as it will help everywhere as optimized codes are appreciated everywhere.  We had a good discussion as to what should I approach, how will it help the time complexity, and everything else going on in my mind.\nHe asked me if I knew about paging, but I remembered it vaguely and I said it straightforward that I don’t remember, as it is no use beating around the bush that just irritates the interviewer. Then he asked me the difference between a 32-bit OS and a 64-bit OS and how much GB RAM can each hold(Ans: 2^(32 or 64)bits memory). He then asked me what was my favourite subject to which I answered Cryptography, and he asked me questions from it. Questions were related to Asymmetric key cryptography and the difference between symmetric and asymmetric.  \nThe whole idea of the interview was to see my approach rather than my coding skill, but a good knowledge of the basics of the core CS subjects, as well as algorithms, is a must. Proficiency in coding is appreciated, but not very necessary as your communication, approach and logic are what matters.\n\nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience for Internship""}, {'title': 'Adobe Interview Experience For Mts 1 2', 'url': 'https://www.geeksforgeeks.org/adobe-interview-experience-for-mts-1-2/', 'content_summary': 'First, there was an online round on cocubes of 1 hr 30 min. 1hr was for aptitude which consisted of 60 questions(mental ability, comprehensive, reasoning) and next 30 min was for 2 coding questions that were very basic. Accuracy required in aptitude as coding questions were done by all and aptitude made all the difference. Candidates shortlisted were called for interview in their office. Round 1: \nFirst, he asked me to brief about yourself and there was a long discussion about my projects and their applications. As I mentioned the github link for all the projects, he visited my profile and checked my repositories and asked about github and the tools I have used.\nDetect the loop in the linked list and then find the point from where the loop started. he then asked to write the code. https://www.geeksforgeeks.org/problems/detect-loop-in-linked-list/1\nSearch in row-wise and column wise sorted matrix. https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1  he emptied some cells in the matrix and asked how to insert the number in the matrix. only logic was required.\nWhat are threads and processes? Can two threads in a process communicate? Is communication possible between two threads of two different processes? https://www.geeksforgeeks.org/inter-thread-communication-java/   https://www.geeksforgeeks.org/inter-process-communication/\nRound 2:\nFirst the small introduction and then he asked to rate my favorite(java) programming language.\nAgain the same question of the linked list was asked in the 2nd round but this time he asked me to prove my solution. Proof of solution of slow and fast pointer concept to find the meeting point was asked. He wants me to answer that the point where slow and fast pointer meets is the midpoint of the whole linked list. https://www.geeksforgeeks.org/problems/detect-loop-in-linked-list/1\nFind the nth node from the end of a linked list and write the code. https://www.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1\nPostorder traversal of a tree and code it.\nDifference between mutex and semaphore. Difference between the mutex and binary semaphore.\nAt last, a long discussion of about 45min on the implementation of hashmap was held. He made a class where hashcode method and equals method of object class was overridden. the object of the class was the key and many values were put in the hashmap and the output was asked along with the size of an array used in a hashmap and then their time complexity. He changed the implementation of the above 2 methods 4 times and then asked the same questions. For Ex, if hashcode return 1 and equals method return true always then every time value is overwritten and size of an array is 1 and complexity is O(1) as the complexity of hashcode and equals method is O(1).\nThen again discussion continued on hashmap. Given a class of city which contains all the malls in it and a class of mall which contains cities in which it is present. what should be done to make both city and mall to act as a key of the hashmap. Here runtime polymorphism was used where a base class was made with equals and hashcode method which is inherited by both city and mall class. https://www.geeksforgeeks.org/internal-working-of-hashmap-java/\nRound 3:\nhttps://www.geeksforgeeks.org/problems/rotate-by-90-degree-1587115621/1\nif you have a directory of many files then how will you find the duplicate files or which data structure is best for performing that search of duplicate files. Ans: hashmap. this technique is used by WhatsApp to remove all the duplicate messages like forwarded messages.\nHe scanned my resume and asked me to detail about my all the projects and many questions were asked related to it. All the technical problems faced etc.\nAs I was the vice-captain of volleyball so he asked about the duties of a captain. Is it possible to have a captain and a vice-captain not in playing six?\nRound 4 (HR): General discussion. The evaluation was not done in this round. Asked me about good and bad of adobe. He explained everything about Adobe its culture its spread its new technologies. My Feedback from previous interviewers was discussed. Finally, I got the offer. Thank you, Geeks For Geeks for providing study material.It helped a lot.\n\nComment\nMore info\nAdvertise with us\nNext Article\nAdobe Interview Experience (For MTS-1)'}]",https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1?page=1&company=Visa&sortBy=latest,2025-06-11T12:47:24.681207,GeeksforGeeks,Search in a Row-Column sorted matrix,Easy,41.62%,178K+,15m,"Given a 2D integer matrix mat[][] of size n x m, where every row and column is sorted in increasing order and a number x, the task is to find whether element x is present in the matrix.
Examples:
Input: mat[][] = [[3, 30, 38],[20, 52, 54],[35, 60, 69]], x = 62
Output: false
Explanation: 62 is not present in the matrix, so output is false.
Input: mat[][] = [[18, 21, 27],[38, 55, 67]], x = 55
Output: true
Explanation: 55 is present in the matrix.
Input: mat[][] = [[1, 2, 3],[4, 5, 6],[7, 8, 9]], x = 3
Output: true
Explanation: 3 is present in the matrix.
Constraints:
1 <= n, m <=1000
1 <= mat[i][j] <= 109
1<= x <= 109",O(n + m),O(1),"['Paytm', 'Accolite', 'Amazon', 'Microsoft', 'Snapdeal', 'MakeMyTrip', 'Ola Cabs', 'Oracle', 'Visa', 'Goldman Sachs', 'Directi', 'Adobe', 'SAP Labs', 'Groupon', 'InMobi', 'One97', 'Polycom', 'TinyOwl']","['Searching', 'Matrix', 'Data Structures', 'Algorithms']"
